/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunksudoku_wasm_client"] = self["webpackChunksudoku_wasm_client"] || []).push([["src_index_tsx-data_image_svg_xml_3csvg_xmlns_27http_www_w3_org_2000_svg_27_viewBox_27-4_-4_8_-5251bf"],{

/***/ "./src/App.tsx":
/*!*********************!*\
  !*** ./src/App.tsx ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _sudoku_SudokuTable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sudoku/SudokuTable */ \"./src/sudoku/SudokuTable.tsx\");\n/* harmony import */ var react_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-bootstrap */ \"./node_modules/react-bootstrap/esm/Navbar.js\");\n/* harmony import */ var react_bootstrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-bootstrap */ \"./node_modules/react-bootstrap/esm/Container.js\");\n/* harmony import */ var react_bootstrap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-bootstrap */ \"./node_modules/react-bootstrap/esm/Row.js\");\n/* harmony import */ var _logo_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logo.svg */ \"./src/logo.svg\");\n/* harmony import */ var _logo_svg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_logo_svg__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _App_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./App.css */ \"./src/App.css\");\n/* harmony import */ var _App_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_App_css__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_sudoku_SudokuTable__WEBPACK_IMPORTED_MODULE_1__]);\n_sudoku_SudokuTable__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\nfunction App() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"header\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    bg: \"dark\",\n    variant: \"dark\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Brand, {\n    href: \"#home\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n    src: (_logo_svg__WEBPACK_IMPORTED_MODULE_2___default()),\n    width: \"30\",\n    height: \"30\",\n    className: \"d-inline-block align-top sudoku-logo\",\n    alt: \"bla\"\n  }), \"\\xA0\\xA0Sudoku\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"main\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_5__[\"default\"], null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    className: \"mt-3 justify-content-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_sudoku_SudokuTable__WEBPACK_IMPORTED_MODULE_1__[\"default\"], null)))));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://sudoku-wasm-client/./src/App.tsx?");

/***/ }),

/***/ "./src/index.tsx":
/*!***********************!*\
  !*** ./src/index.tsx ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var bootstrap_dist_css_bootstrap_min_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bootstrap/dist/css/bootstrap.min.css */ \"./node_modules/bootstrap/dist/css/bootstrap.min.css\");\n/* harmony import */ var bootstrap_dist_css_bootstrap_min_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bootstrap_dist_css_bootstrap_min_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _App__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./App */ \"./src/App.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_App__WEBPACK_IMPORTED_MODULE_3__]);\n_App__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nreact_dom__WEBPACK_IMPORTED_MODULE_1__.render(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_App__WEBPACK_IMPORTED_MODULE_3__[\"default\"], null)), document.getElementById('root'));\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://sudoku-wasm-client/./src/index.tsx?");

/***/ }),

/***/ "./src/sudoku/SudokuTable.tsx":
/*!************************************!*\
  !*** ./src/sudoku/SudokuTable.tsx ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _SudokuTableCore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SudokuTableCore */ \"./src/sudoku/SudokuTableCore.tsx\");\n/* harmony import */ var react_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-bootstrap */ \"./node_modules/react-bootstrap/esm/Modal.js\");\n/* harmony import */ var react_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-bootstrap */ \"./node_modules/react-bootstrap/esm/Button.js\");\n/* harmony import */ var react_bootstrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-bootstrap */ \"./node_modules/react-bootstrap/esm/Container.js\");\n/* harmony import */ var react_bootstrap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-bootstrap */ \"./node_modules/react-bootstrap/esm/Row.js\");\n/* harmony import */ var _SudokuTable_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SudokuTable.css */ \"./src/sudoku/SudokuTable.css\");\n/* harmony import */ var _SudokuTable_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_SudokuTable_css__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_SudokuTableCore__WEBPACK_IMPORTED_MODULE_1__]);\n_SudokuTableCore__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nfunction tableRow(size, rowNr, sudoku, setValueInSudoku, isUserInput) {\n  var sizeElements = Array(size).fill(0).map(function (v, i) {\n    return rowNr * 9 + i;\n  });\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"tr\", null, sizeElements.map(function (entry) {\n    return tableEntry(entry, sudoku, setValueInSudoku, isUserInput);\n  })));\n}\nvar styles = {\n  text_normal: {\n    fontWeight: \"normal\"\n  },\n  text_bold: {\n    fontWeight: \"bold\",\n    color: \"red\"\n  }\n};\nfunction tableEntry(entryNr, sudoku, setValueInSudoku, isUserInput) {\n  var entryStr = \"\".concat(entryNr);\n  var cellNames = [\"left-top\", \"middle-top\", \"right-top\", \"left-middle\", \"middle-middle\", \"right-middle\", \"left-bottom\", \"middle-bottom\", \"right-bottom\"];\n  var row = Math.floor(entryNr / 9);\n  var col = entryNr % 9;\n  var meta_cell_row = Math.floor(row / 3);\n  var meta_cell_col = Math.floor(col / 3);\n  var pos_row = row - meta_cell_row * 3;\n  var pos_col = col - meta_cell_col * 3;\n  var pos_idx = pos_row * 3 + pos_col;\n  var styleName = cellNames[pos_idx];\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"td\", {\n    className: styleName\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n    value: sudoku[entryNr] === 0 ? \"\" : sudoku[entryNr],\n    name: entryStr,\n    type: \"text\",\n    pattern: \"[0-9]*\",\n    style: isUserInput[entryNr] ? styles.text_bold : styles.text_normal,\n    maxLength: 1,\n    size: 1,\n    onChange: function onChange(event) {\n      console.log(\"change \".concat(event.currentTarget.name, \" to \").concat(event.currentTarget.value));\n      if (!isNaN(parseInt(event.currentTarget.value)) || event.currentTarget.value === \"\") {\n        var parseValue = parseInt(event.currentTarget.value);\n        if (isNaN(parseValue)) {\n          setValueInSudoku(entryNr, 0);\n        } else {\n          setValueInSudoku(entryNr, parseInt(event.currentTarget.value));\n        }\n      }\n    }\n  })));\n}\nvar SudokuTable = function SudokuTable() {\n  var size = 9;\n  var sudokuTableCore = (0,_SudokuTableCore__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(size);\n  var sizeElements = Array(size).fill(0).map(function (v, i) {\n    return i;\n  });\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSolving = _useState2[0],\n    setSolving = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showWarning = _useState4[0],\n    setShowWarning = _useState4[1];\n  var ConflictWarning = function ConflictWarning() {\n    var handleClose = function handleClose() {\n      return setShowWarning(false);\n    };\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n      show: showWarning,\n      onHide: handleClose\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Header, {\n      closeButton: true\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Title, null, \"WARNING\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Body, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", null, \" Sudoku contains unsolvable conflict(s)!\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", null, \" Please fix the conflicts and try again!\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Footer, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n      variant: \"primary\",\n      onClick: handleClose\n    }, \"Close\")));\n  };\n  var handleClick = function handleClick() {\n    if (!isSolving) {\n      var sudokuIsOkay = sudokuTableCore.checkSudokuIsSolvable();\n      if (sudokuIsOkay) {\n        setSolving(true);\n        sudokuTableCore.solveSudoku();\n        setSolving(false);\n      } else {\n        setShowWarning(true);\n      }\n    }\n  };\n  var handleClearClick = function handleClearClick() {\n    sudokuTableCore.clearSudoku();\n  };\n  var handleInsertClick = function handleInsertClick() {\n    sudokuTableCore.insertSampleSudoku();\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_5__[\"default\"], null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConflictWarning, null, \" \"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    className: \"justify-content-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"table\", {\n    className: \"sudoku-table\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"tbody\", null, sizeElements.map(function (row) {\n    return tableRow(size, row, sudokuTableCore.sudoku, sudokuTableCore.setValueInSudoku, sudokuTableCore.isUserInput);\n  })))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    className: \"mt-3 justify-content-center button-container\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    className: \"ml-2\",\n    variant: \"primary\",\n    disabled: isSolving,\n    onClick: handleInsertClick\n  }, \"Insert Example\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    className: \"ml-2\",\n    variant: \"primary\",\n    disabled: isSolving,\n    onClick: handleClick\n  }, isSolving ? \"Solving…\" : \"Solve\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    className: \"ml-2\",\n    variant: \"primary\",\n    disabled: isSolving,\n    onClick: handleClearClick\n  }, \"Clear\")));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SudokuTable);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://sudoku-wasm-client/./src/sudoku/SudokuTable.tsx?");

/***/ }),

/***/ "./src/sudoku/SudokuTableCore.tsx":
/*!****************************************!*\
  !*** ./src/sudoku/SudokuTableCore.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var sudoku_solver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sudoku_solver */ \"../pkg/sudoku_solver.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([sudoku_solver__WEBPACK_IMPORTED_MODULE_1__]);\nsudoku_solver__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nfunction useSudokuTableCore(size) {\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Array(size * size).fill(0)),\n    _useState2 = _slicedToArray(_useState, 2),\n    sudoku = _useState2[0],\n    setSudoku = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Array(size * size).fill(false)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isUserInput = _useState4[0],\n    setIsUserInput = _useState4[1];\n  var setValueInSudoku = function setValueInSudoku(place, value) {\n    var currentSudoku = _toConsumableArray(sudoku);\n    console.log(\"set value \".concat(value, \" in place \").concat(place, \".\"));\n    console.log(currentSudoku.toString());\n    currentSudoku[place] = value;\n    isUserInput[place] = true;\n    console.log(currentSudoku.toString());\n    setSudoku(currentSudoku);\n  };\n  var insertSampleSudoku = function insertSampleSudoku() {\n    var example_sudoku = \"\";\n    example_sudoku = sudoku_solver__WEBPACK_IMPORTED_MODULE_1__.wasm_get_sample_sudoku_string(Math.random());\n    var isUserInput = new Array(size * size).fill(false);\n    var example_sudoku_array = example_sudoku.split('').map(function (x) {\n      return +x;\n    });\n    for (var index = 0; index < example_sudoku.length; ++index) {\n      isUserInput[index] = example_sudoku_array[index] !== 0;\n    }\n    setIsUserInput(isUserInput);\n    setSudoku(example_sudoku_array);\n  };\n  var solveSudoku = function solveSudoku() {\n    var solvedSudoku = \"\";\n    solvedSudoku = sudoku_solver__WEBPACK_IMPORTED_MODULE_1__.wasm_solve_sudoku(sudoku.join(\"\"));\n    setSudoku(solvedSudoku.split('').map(function (x) {\n      return +x;\n    }));\n  };\n  var checkSudokuIsSolvable = function checkSudokuIsSolvable() {\n    var sudokuHasConflict = sudoku_solver__WEBPACK_IMPORTED_MODULE_1__.wasm_sudoku_contains_conflicts(sudoku.join(\"\"));\n    return !sudokuHasConflict;\n  };\n  var clearSudoku = function clearSudoku() {\n    var emptySudoku = new Array(size * size).fill(0);\n    var emptyIsUserInput = new Array(size * size).fill(false);\n    setSudoku(emptySudoku);\n    setIsUserInput(emptyIsUserInput);\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    console.log(sudoku.toString());\n  }, [sudoku]);\n  return {\n    sudoku: sudoku,\n    isUserInput: isUserInput,\n    setValueInSudoku: setValueInSudoku,\n    checkSudokuIsSolvable: checkSudokuIsSolvable,\n    insertSampleSudoku: insertSampleSudoku,\n    solveSudoku: solveSudoku,\n    clearSudoku: clearSudoku\n  };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useSudokuTableCore);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://sudoku-wasm-client/./src/sudoku/SudokuTableCore.tsx?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/App.css":
/*!***********************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/App.css ***!
  \***********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n\n@media (prefers-reduced-motion: no-preference) {\n  .sudoku-logo {\n    animation: logo-spin infinite 3s linear;\n  }\n}\n\n@keyframes logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://sudoku-wasm-client/./src/App.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/sudoku/SudokuTable.css":
/*!**************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/sudoku/SudokuTable.css ***!
  \**************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.sudoku-table {\n    border-spacing: 0;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n\n.sudoku-table td {\n    padding: 0;\n    margin: 0;\n    width: 2.0rem;\n    height: 2.0rem;\n}\n\n.sudoku-table input[type=text] {\n    font-size: 20pt;\n    width: 100%;\n    height: 100%;\n    line-height: 2.0rem;\n    margin: 0.0rem;\n    padding: 0;\n    text-align: center;\n    border: 0;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    aspect-ratio: 1/1;\n}\n\n.sudoku-table .right-middle {\n    border-left: 1px solid black;\n    border-right: 3px solid black;\n    border-top: 1px solid black;\n    border-bottom: 1px solid black;\n}\n\n.sudoku-table .left-middle {\n    border-left: 3px solid black;\n    border-right: 1px solid black;\n    border-top: 1px solid black;\n    border-bottom: 1px solid black;\n}\n\n.sudoku-table .middle-middle {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-top: 1px solid black;\n    border-bottom: 1px solid black;\n}\n\n.sudoku-table .left-top {\n    border-left: 3px solid black;\n    border-right: 1px solid black;\n    border-top: 3px solid black;\n    border-bottom: 1px solid black;\n}\n\n.sudoku-table .left-bottom {\n    border-left: 3px solid black;\n    border-right: 1px solid black;\n    border-top: 1px solid black;\n    border-bottom: 3px solid black;\n}\n\n.sudoku-table .middle-bottom {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-top: 1px solid black;\n    border-bottom: 3px solid black;\n}\n\n.sudoku-table .middle-top {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-top: 3px solid black;\n    border-bottom: 1px solid black;\n}\n\n.sudoku-table .right-bottom {\n    border-left: 1px solid black;\n    border-right: 3px solid black;\n    border-top: 1px solid black;\n    border-bottom: 3px solid black;\n}\n\n.sudoku-table .right-top {\n    border-left: 1px solid black;\n    border-right: 3px solid black;\n    border-top: 3px solid black;\n    border-bottom: 1px solid black;\n}\n\n.button-container .btn {\n    width: 10rem;\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://sudoku-wasm-client/./src/sudoku/SudokuTable.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./src/App.css":
/*!*********************!*\
  !*** ./src/App.css ***!
  \*********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var api = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./App.css */ \"./node_modules/css-loader/dist/cjs.js!./src/App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};\n\n//# sourceURL=webpack://sudoku-wasm-client/./src/App.css?");

/***/ }),

/***/ "./src/sudoku/SudokuTable.css":
/*!************************************!*\
  !*** ./src/sudoku/SudokuTable.css ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var api = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!./SudokuTable.css */ \"./node_modules/css-loader/dist/cjs.js!./src/sudoku/SudokuTable.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};\n\n//# sourceURL=webpack://sudoku-wasm-client/./src/sudoku/SudokuTable.css?");

/***/ }),

/***/ "./src/logo.svg":
/*!**********************!*\
  !*** ./src/logo.svg ***!
  \**********************/
/***/ ((module) => {

eval("module.exports = \"data:image/svg+xml,%3Csvg id='svg' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='400' height='400' viewBox='0, 0, 400,400'%3E%3Cg id='svgg'%3E%3Cpath id='path0' d='M272.200 36.817 C 271.540 37.026,269.525 37.456,267.723 37.774 C 265.920 38.092,264.030 38.618,263.523 38.943 C 263.015 39.269,261.790 39.744,260.800 40.000 C 259.810 40.256,258.640 40.692,258.200 40.969 C 257.760 41.247,256.866 41.605,256.213 41.766 C 255.560 41.927,254.309 42.586,253.434 43.229 C 252.559 43.873,251.679 44.400,251.479 44.400 C 251.279 44.400,250.606 44.805,249.983 45.300 C 249.360 45.795,247.984 46.825,246.925 47.589 C 243.340 50.176,237.258 56.880,235.484 60.200 C 235.132 60.860,234.388 62.300,233.831 63.400 C 233.275 64.500,232.641 65.670,232.423 66.000 C 230.583 68.782,228.807 77.269,228.823 83.200 C 228.846 92.223,231.910 96.389,239.840 98.182 L 244.157 99.157 247.286 98.123 C 249.522 97.384,250.733 96.727,251.531 95.817 C 252.805 94.367,256.000 88.708,256.000 87.903 C 256.000 87.610,256.371 86.656,256.825 85.785 C 257.279 84.913,257.894 83.030,258.192 81.600 C 260.860 68.807,271.472 61.710,281.768 65.831 C 292.165 69.994,295.211 84.453,288.082 95.800 C 287.391 96.900,286.435 98.520,285.958 99.400 C 285.481 100.280,283.990 102.478,282.645 104.285 C 281.300 106.092,279.570 108.494,278.800 109.623 C 278.030 110.751,276.908 112.243,276.307 112.937 C 274.652 114.849,274.344 115.235,272.422 117.814 C 271.444 119.126,270.447 120.380,270.206 120.600 C 269.965 120.820,267.182 124.060,264.022 127.800 C 260.862 131.540,257.359 135.600,256.238 136.822 C 253.862 139.412,252.741 140.679,246.232 148.131 C 243.574 151.173,240.950 154.223,240.400 154.908 C 239.850 155.593,238.635 156.946,237.700 157.914 C 236.765 158.882,236.000 159.759,236.000 159.864 C 236.000 160.123,233.713 162.918,231.986 164.770 C 228.037 169.004,226.092 178.029,228.545 180.739 C 228.905 181.137,229.200 181.601,229.200 181.770 C 229.200 183.383,233.049 186.255,237.216 187.752 L 240.136 188.800 278.264 188.800 L 316.392 188.800 319.096 187.719 C 324.601 185.517,326.423 183.595,327.705 178.638 L 328.584 175.236 327.631 171.440 C 325.370 162.434,322.412 161.508,295.282 161.305 L 275.564 161.158 275.109 160.161 C 274.721 159.308,274.785 159.036,275.552 158.282 C 276.045 157.797,277.176 156.410,278.067 155.200 C 278.957 153.990,279.802 152.910,279.943 152.800 C 280.372 152.466,286.854 145.183,289.377 142.200 C 290.679 140.660,291.937 139.220,292.172 139.000 C 292.877 138.340,295.318 135.488,296.600 133.826 C 297.260 132.970,298.250 131.785,298.800 131.193 C 299.350 130.600,300.208 129.594,300.706 128.958 C 303.241 125.718,307.453 120.222,307.839 119.650 C 308.080 119.292,308.943 118.010,309.756 116.800 C 310.569 115.590,311.762 113.880,312.406 113.000 C 313.051 112.120,314.415 109.780,315.437 107.800 C 316.459 105.820,317.913 103.030,318.667 101.600 C 319.422 100.170,320.283 98.100,320.580 97.000 C 320.878 95.900,321.485 93.830,321.929 92.400 C 325.011 82.469,323.622 66.852,318.991 59.379 C 315.366 53.529,312.823 50.568,308.221 46.833 C 305.187 44.372,300.886 41.600,300.102 41.600 C 299.836 41.600,299.030 41.241,298.310 40.801 C 297.589 40.362,296.640 39.998,296.200 39.993 C 295.760 39.987,294.590 39.612,293.600 39.158 C 289.531 37.295,275.531 35.763,272.200 36.817 M90.758 40.006 C 86.367 40.748,82.117 45.328,81.039 50.480 C 80.485 53.128,80.508 53.796,81.278 57.400 C 81.674 59.259,84.237 63.928,84.888 63.978 C 85.047 63.990,85.947 64.532,86.888 65.182 C 89.016 66.650,92.627 67.200,100.152 67.200 C 104.093 67.200,105.646 67.345,106.224 67.768 C 106.983 68.323,107.005 69.466,107.219 121.468 C 107.417 169.432,107.504 174.927,108.121 177.961 C 108.854 181.573,110.589 184.757,112.619 186.220 C 113.214 186.649,114.191 187.398,114.789 187.884 C 116.724 189.455,123.647 190.174,127.726 189.227 C 132.251 188.177,136.601 183.010,137.544 177.567 C 138.194 173.815,138.191 54.310,137.541 50.373 C 136.660 45.041,132.874 40.924,128.001 40.000 C 125.535 39.533,93.527 39.537,90.758 40.006 M111.000 215.206 C 107.734 215.685,101.560 217.435,99.200 218.551 C 97.990 219.124,96.775 219.594,96.500 219.596 C 96.225 219.598,96.000 219.760,96.000 219.957 C 96.000 220.153,95.314 220.588,94.476 220.923 C 90.153 222.653,81.090 230.077,79.367 233.300 C 79.044 233.905,78.633 234.400,78.454 234.400 C 78.275 234.400,77.906 234.895,77.635 235.500 C 77.364 236.105,76.844 237.050,76.480 237.600 C 68.483 249.678,77.556 266.259,90.158 262.595 C 92.109 262.028,97.200 257.917,97.200 256.908 C 97.200 256.727,98.235 255.286,99.500 253.707 C 100.765 252.128,102.330 250.108,102.977 249.218 C 103.624 248.328,104.286 247.600,104.448 247.600 C 104.610 247.600,105.003 247.340,105.321 247.022 C 109.829 242.513,121.395 241.372,126.969 244.885 C 132.214 248.190,133.800 251.238,133.800 258.008 L 133.800 263.016 132.342 265.208 C 130.349 268.205,127.189 271.200,126.021 271.200 C 125.772 271.200,124.900 271.539,124.084 271.953 C 123.268 272.368,121.203 272.994,119.495 273.345 C 117.788 273.697,115.898 274.234,115.295 274.539 C 114.693 274.844,113.570 275.207,112.799 275.346 C 111.018 275.668,107.783 277.954,106.090 280.087 C 102.934 284.065,103.551 294.013,107.138 296.958 C 107.434 297.201,108.111 297.798,108.642 298.285 C 109.173 298.772,110.370 299.434,111.304 299.755 C 112.237 300.076,113.630 300.603,114.400 300.925 C 115.170 301.247,117.780 301.705,120.200 301.942 C 134.067 303.301,139.703 308.564,139.770 320.216 C 139.794 324.355,139.668 325.635,139.161 326.416 C 138.809 326.957,138.307 328.053,138.046 328.852 C 137.784 329.650,137.217 330.623,136.785 331.014 C 136.353 331.404,135.998 331.921,135.995 332.162 C 135.988 332.750,133.223 335.579,131.548 336.711 C 126.817 339.908,127.022 339.825,122.600 340.361 C 116.205 341.136,108.598 339.450,106.115 336.706 C 105.764 336.318,105.255 336.000,104.985 336.000 C 104.532 336.000,103.292 334.698,100.486 331.275 C 99.889 330.547,99.130 329.668,98.800 329.323 C 98.470 328.978,97.840 328.023,97.400 327.201 C 96.960 326.380,96.197 324.975,95.705 324.080 C 89.993 313.690,77.262 313.786,70.400 324.272 C 69.125 326.221,68.885 334.605,70.054 336.400 C 70.412 336.950,70.827 337.940,70.977 338.600 C 72.433 345.016,80.208 354.481,88.485 359.913 C 94.000 363.533,94.660 363.906,96.070 364.205 C 96.801 364.360,98.210 364.825,99.200 365.239 C 100.190 365.652,102.170 366.249,103.600 366.565 C 105.030 366.881,107.010 367.458,108.000 367.847 C 110.314 368.757,126.239 368.913,129.200 368.055 C 130.190 367.768,132.503 367.184,134.340 366.756 C 136.178 366.329,138.175 365.723,138.780 365.410 C 139.384 365.098,140.761 364.621,141.840 364.352 C 142.918 364.082,145.150 363.007,146.800 361.962 C 148.450 360.917,150.610 359.563,151.600 358.954 C 153.643 357.697,154.001 357.398,157.618 353.918 C 161.485 350.199,166.400 343.879,166.400 342.627 C 166.400 342.460,166.762 341.815,167.204 341.195 C 171.195 335.590,172.634 322.451,170.384 312.167 C 170.003 310.428,168.199 306.438,166.599 303.800 C 166.066 302.920,165.218 301.456,164.715 300.546 C 163.445 298.250,157.799 292.405,155.474 290.980 C 154.415 290.331,152.980 289.305,152.285 288.700 C 151.590 288.095,150.837 287.599,150.611 287.598 C 150.079 287.596,147.200 284.955,147.200 284.469 C 147.200 284.265,148.156 283.311,149.324 282.349 C 150.493 281.387,152.005 279.970,152.686 279.200 C 153.366 278.430,154.677 276.990,155.600 276.000 C 157.048 274.446,160.400 268.406,160.400 267.350 C 160.400 267.151,160.746 266.343,161.168 265.555 C 161.962 264.074,163.150 258.333,163.498 254.301 C 163.714 251.790,162.225 243.052,161.402 242.000 C 161.143 241.670,160.703 240.770,160.422 240.000 C 157.761 232.687,150.249 223.948,144.011 220.908 C 143.455 220.637,142.730 220.247,142.400 220.042 C 135.719 215.887,121.398 213.682,111.000 215.206 M285.395 215.183 C 282.005 215.907,278.437 217.855,275.657 220.502 C 273.948 222.130,269.777 228.894,266.225 235.800 C 265.206 237.780,263.759 240.390,263.009 241.600 C 262.258 242.810,260.724 245.600,259.599 247.800 C 258.474 250.000,257.034 252.610,256.398 253.600 C 255.762 254.590,254.877 256.120,254.431 257.000 C 253.985 257.880,253.457 258.870,253.258 259.200 C 253.060 259.530,252.599 260.430,252.235 261.200 C 251.871 261.970,250.969 263.590,250.231 264.800 C 249.493 266.010,248.059 268.620,247.043 270.600 C 246.028 272.580,244.665 275.010,244.014 276.000 C 243.363 276.990,242.555 278.430,242.219 279.200 C 241.883 279.970,241.432 280.870,241.217 281.200 C 241.001 281.530,240.452 282.604,239.997 283.586 C 239.541 284.568,239.020 285.468,238.838 285.586 C 238.530 285.785,235.726 290.903,233.899 294.600 C 233.464 295.480,232.876 296.470,232.592 296.800 C 232.308 297.130,231.319 298.887,230.394 300.703 C 229.470 302.520,228.566 304.098,228.386 304.209 C 228.206 304.320,227.843 305.084,227.580 305.906 C 227.317 306.728,226.789 307.760,226.408 308.200 C 223.942 311.045,221.477 317.217,221.455 320.600 C 221.428 324.869,224.655 330.800,227.006 330.800 C 227.271 330.800,228.188 331.295,229.044 331.900 L 230.600 333.000 257.886 333.200 C 283.383 333.387,285.219 333.447,285.886 334.114 C 286.522 334.750,286.627 335.991,286.847 345.514 C 287.115 357.128,287.461 359.424,289.360 362.200 C 294.423 369.604,312.444 368.453,314.424 360.600 C 314.646 359.720,315.040 358.550,315.299 358.000 C 315.607 357.346,315.845 353.171,315.985 345.941 C 316.245 332.553,315.875 333.420,321.473 333.086 C 324.289 332.918,325.606 332.659,326.364 332.123 C 326.934 331.719,327.916 331.125,328.546 330.802 C 336.034 326.970,336.095 312.438,328.639 308.795 C 327.958 308.462,326.916 307.863,326.324 307.465 C 325.576 306.960,324.087 306.655,321.429 306.461 C 315.573 306.032,316.234 310.452,315.990 270.086 C 315.723 225.871,315.869 226.630,306.046 218.322 C 302.830 215.602,291.503 213.880,285.395 215.183 M286.400 249.483 C 286.691 249.749,286.879 301.953,286.595 303.522 C 286.065 306.447,286.302 306.400,272.029 306.400 C 255.943 306.400,255.507 306.041,260.843 297.200 C 261.042 296.870,261.513 295.970,261.889 295.200 C 262.266 294.430,262.871 293.350,263.234 292.800 C 263.598 292.250,264.027 291.350,264.189 290.800 C 264.482 289.799,267.269 283.929,267.987 282.800 C 268.197 282.470,268.935 280.940,269.628 279.400 C 271.062 276.215,273.369 271.484,274.213 270.000 C 274.526 269.450,275.345 267.740,276.033 266.200 C 282.367 252.025,284.834 248.046,286.400 249.483 ' stroke='none' fill='%23f7f9fa' fill-rule='evenodd'%3E%3C/path%3E%3Cpath id='path1' d='M26.800 0.600 C 26.800 0.993,26.406 1.200,25.658 1.200 C 24.995 1.200,24.065 1.619,23.438 2.200 C 22.844 2.750,21.921 3.200,21.387 3.200 C 20.684 3.200,20.346 3.477,20.164 4.200 C 19.986 4.909,19.642 5.200,18.980 5.200 C 18.467 5.200,17.934 5.383,17.796 5.607 C 17.658 5.830,17.422 5.939,17.272 5.849 C 16.930 5.642,16.148 6.465,16.178 7.000 C 16.190 7.220,15.705 7.457,15.100 7.527 C 14.495 7.596,13.978 7.821,13.950 8.027 C 13.922 8.232,13.878 8.617,13.850 8.882 C 13.822 9.147,13.350 9.469,12.800 9.598 C 12.168 9.746,11.753 10.158,11.672 10.716 C 11.591 11.275,11.263 11.600,10.780 11.600 C 10.305 11.600,9.923 11.966,9.773 12.565 C 9.631 13.130,9.141 13.628,8.592 13.766 C 7.940 13.930,7.614 14.338,7.526 15.101 C 7.457 15.705,7.261 16.151,7.092 16.092 C 6.678 15.946,5.641 16.929,5.849 17.272 C 5.939 17.422,5.830 17.658,5.607 17.796 C 5.383 17.934,5.200 18.474,5.200 18.996 C 5.200 19.675,4.944 19.981,4.300 20.072 C 3.653 20.164,3.364 20.512,3.273 21.309 C 3.202 21.919,2.707 22.890,2.173 23.467 C 1.420 24.279,1.200 24.956,1.200 26.458 C 1.200 27.918,1.051 28.400,0.600 28.400 C 0.068 28.400,0.000 47.822,0.000 200.800 C 0.000 350.565,0.076 373.200,0.576 373.200 C 0.953 373.200,1.195 373.719,1.276 374.700 C 1.360 375.718,1.576 376.163,1.949 376.084 C 2.294 376.011,2.412 376.191,2.267 376.571 C 2.139 376.903,2.235 377.298,2.479 377.449 C 2.738 377.609,2.812 377.542,2.655 377.289 C 2.508 377.051,2.535 376.764,2.717 376.651 C 2.898 376.539,3.090 377.189,3.144 378.095 C 3.262 380.101,3.428 380.400,4.424 380.400 C 4.970 380.400,5.200 380.676,5.200 381.333 C 5.200 381.847,5.335 382.402,5.500 382.567 C 5.665 382.732,5.800 383.032,5.800 383.233 C 5.800 383.435,5.941 383.594,6.114 383.586 C 6.712 383.559,7.600 384.746,7.600 385.571 C 7.600 386.189,7.855 386.400,8.600 386.400 C 9.400 386.400,9.600 386.600,9.600 387.400 C 9.600 388.200,9.800 388.400,10.600 388.400 C 11.398 388.400,11.600 388.601,11.600 389.392 C 11.600 390.093,11.869 390.452,12.515 390.614 C 13.018 390.741,13.603 391.239,13.815 391.722 C 14.027 392.205,14.605 392.658,15.100 392.728 C 15.658 392.807,16.000 393.133,16.000 393.585 C 16.000 394.448,16.763 394.800,18.633 394.800 C 19.824 394.800,20.000 394.928,20.000 395.800 C 20.000 396.787,20.591 396.998,23.096 396.908 C 23.368 396.898,23.502 397.035,23.393 397.211 C 23.284 397.387,23.331 397.608,23.498 397.700 C 23.664 397.793,23.530 397.808,23.200 397.733 C 22.802 397.644,22.862 397.801,23.376 398.199 C 23.804 398.530,24.659 398.800,25.276 398.800 C 26.008 398.800,26.400 399.009,26.400 399.400 C 26.400 399.932,45.933 400.000,199.800 400.000 C 353.667 400.000,373.200 399.932,373.200 399.400 C 373.200 398.981,373.622 398.800,374.600 398.800 C 375.370 398.800,376.000 398.609,376.000 398.376 C 376.000 398.143,376.160 398.051,376.355 398.172 C 376.550 398.293,376.955 398.078,377.255 397.696 C 377.742 397.074,377.729 397.055,377.136 397.519 C 376.623 397.920,376.403 397.929,376.174 397.558 C 375.992 397.263,376.045 397.181,376.311 397.345 C 376.549 397.492,376.858 397.430,376.996 397.207 C 377.134 396.983,377.755 396.800,378.375 396.800 C 379.450 396.800,380.822 395.742,380.400 395.239 C 380.290 395.107,381.006 394.910,381.991 394.800 C 383.392 394.644,383.889 394.383,384.275 393.604 C 384.547 393.056,385.092 392.606,385.485 392.604 C 385.914 392.601,386.250 392.250,386.325 391.725 C 386.402 391.179,386.779 390.802,387.325 390.725 C 387.937 390.637,388.237 390.277,388.324 389.524 C 388.420 388.693,388.693 388.420,389.524 388.324 C 390.277 388.237,390.637 387.937,390.725 387.325 C 390.802 386.779,391.179 386.402,391.725 386.325 C 392.245 386.250,392.647 385.871,392.716 385.388 C 392.780 384.941,393.230 384.401,393.716 384.188 C 394.390 383.892,394.629 383.402,394.722 382.125 C 394.822 380.751,395.001 380.427,395.722 380.325 C 396.370 380.233,396.631 379.885,396.717 379.000 C 396.782 378.340,396.945 377.530,397.081 377.200 C 397.216 376.870,397.294 376.452,397.254 376.270 C 397.213 376.089,397.373 376.060,397.610 376.206 C 397.906 376.389,397.878 376.677,397.519 377.136 C 397.055 377.729,397.074 377.742,397.696 377.255 C 398.078 376.955,398.300 376.562,398.189 376.382 C 398.078 376.202,398.170 375.942,398.393 375.804 C 398.617 375.666,398.800 375.113,398.800 374.576 C 398.800 373.975,399.031 373.600,399.400 373.600 C 400.231 373.600,400.155 372.899,399.300 372.676 C 398.633 372.502,398.633 372.491,399.300 372.446 C 400.391 372.374,400.391 28.561,399.300 28.276 C 398.633 28.102,398.633 28.091,399.300 28.046 C 399.685 28.021,400.000 27.820,400.000 27.600 C 400.000 27.380,399.685 27.187,399.300 27.172 C 398.701 27.148,398.716 27.094,399.400 26.800 C 400.084 26.506,400.099 26.452,399.500 26.428 C 399.024 26.409,398.800 26.074,398.800 25.383 C 398.800 24.824,398.429 23.969,397.975 23.483 C 397.207 22.661,397.169 22.655,397.413 23.400 C 397.625 24.047,397.593 24.086,397.244 23.600 C 397.006 23.270,396.809 22.325,396.806 21.500 C 396.801 20.168,396.688 20.000,395.800 20.000 C 394.928 20.000,394.800 19.824,394.800 18.633 C 394.800 16.763,394.448 16.000,393.585 16.000 C 393.133 16.000,392.807 15.658,392.728 15.100 C 392.658 14.605,392.205 14.027,391.722 13.815 C 391.239 13.603,390.741 13.018,390.614 12.515 C 390.452 11.869,390.093 11.600,389.392 11.600 C 388.601 11.600,388.400 11.398,388.400 10.600 C 388.400 9.800,388.200 9.600,387.400 9.600 C 386.600 9.600,386.400 9.400,386.400 8.600 C 386.400 7.855,386.189 7.600,385.571 7.600 C 384.746 7.600,383.559 6.712,383.586 6.114 C 383.594 5.941,383.465 5.786,383.300 5.769 C 381.847 5.619,380.045 5.050,380.205 4.792 C 380.823 3.792,379.770 3.248,376.918 3.093 C 376.652 3.078,376.530 2.914,376.645 2.727 C 376.761 2.540,377.051 2.508,377.289 2.655 C 377.542 2.812,377.609 2.738,377.449 2.479 C 377.298 2.235,376.903 2.139,376.571 2.267 C 376.191 2.412,376.011 2.294,376.084 1.949 C 376.163 1.576,375.718 1.360,374.700 1.276 C 373.719 1.195,373.200 0.953,373.200 0.576 C 373.200 0.076,350.461 0.000,200.000 0.000 C 46.311 0.000,26.800 0.068,26.800 0.600 M287.036 35.828 C 288.116 36.173,290.323 36.702,291.939 37.001 C 293.556 37.301,295.176 37.814,295.539 38.140 C 295.903 38.466,296.920 38.865,297.800 39.026 C 299.317 39.305,304.364 41.720,304.797 42.374 C 304.909 42.543,305.428 42.906,305.950 43.181 C 307.287 43.886,311.014 46.741,312.119 47.908 C 314.842 50.782,317.194 53.451,317.197 53.669 C 317.199 53.817,317.625 54.447,318.145 55.069 C 318.665 55.691,319.223 56.623,319.385 57.139 C 319.547 57.656,320.017 58.417,320.429 58.829 C 320.842 59.242,321.297 60.079,321.441 60.690 C 321.585 61.300,322.027 62.340,322.422 63.000 C 322.818 63.660,323.348 65.460,323.600 67.000 C 323.852 68.540,324.337 70.520,324.677 71.400 C 325.576 73.728,325.571 86.330,324.670 88.600 C 324.320 89.480,323.836 91.370,323.592 92.800 C 323.349 94.230,322.824 96.037,322.425 96.816 C 322.027 97.595,321.575 98.801,321.423 99.497 C 321.270 100.193,320.822 101.176,320.427 101.681 C 320.033 102.187,319.572 103.050,319.403 103.600 C 319.233 104.150,318.779 105.050,318.393 105.600 C 318.007 106.150,317.404 107.230,317.053 108.000 C 316.237 109.790,314.627 112.487,312.603 115.457 C 311.724 116.746,310.874 118.119,310.712 118.509 C 310.551 118.899,310.145 119.323,309.810 119.452 C 309.474 119.580,309.200 119.875,309.200 120.106 C 309.200 120.614,306.062 124.802,303.755 127.373 C 303.230 127.958,302.800 128.595,302.800 128.789 C 302.800 128.983,302.350 129.496,301.800 129.929 C 301.250 130.361,300.800 130.837,300.800 130.986 C 300.800 131.218,298.831 133.706,296.800 136.039 C 293.389 139.958,292.064 141.442,291.300 142.200 C 290.805 142.690,290.400 143.286,290.400 143.523 C 290.400 143.760,290.064 144.190,289.653 144.478 C 289.242 144.766,287.693 146.441,286.210 148.201 C 284.728 149.960,282.878 152.030,282.100 152.800 C 281.322 153.570,280.259 154.875,279.738 155.700 C 279.216 156.525,278.612 157.200,278.395 157.200 C 278.178 157.200,278.000 157.411,278.000 157.669 C 278.000 157.926,277.710 158.458,277.355 158.850 C 276.349 159.961,276.903 159.994,298.400 160.101 C 318.155 160.200,318.203 160.202,319.647 161.100 C 320.443 161.595,321.396 162.000,321.765 162.000 C 322.134 162.000,322.872 162.436,323.405 162.969 C 323.938 163.502,324.716 164.046,325.134 164.179 C 328.906 165.376,331.637 177.447,328.956 181.074 C 328.492 181.702,327.987 182.611,327.834 183.093 C 327.475 184.224,324.196 187.137,322.446 187.881 C 321.701 188.197,320.619 188.806,320.040 189.233 C 318.551 190.334,236.673 190.261,235.866 189.158 C 235.608 188.805,234.948 188.381,234.398 188.216 C 231.191 187.251,227.112 183.067,226.572 180.190 C 225.128 172.492,226.650 168.366,233.990 160.086 C 234.435 159.583,234.800 159.029,234.800 158.853 C 234.800 158.678,235.250 158.294,235.800 158.000 C 236.350 157.706,236.800 157.247,236.800 156.981 C 236.800 156.715,237.094 156.254,237.454 155.955 C 237.814 155.656,238.517 154.779,239.016 154.006 C 239.515 153.233,240.795 151.671,241.861 150.535 C 242.928 149.400,244.610 147.539,245.600 146.400 C 246.590 145.261,248.300 143.353,249.400 142.160 C 250.500 140.967,251.850 139.425,252.400 138.735 C 252.950 138.044,254.270 136.561,255.334 135.439 C 256.397 134.318,258.089 132.365,259.093 131.100 C 260.097 129.835,261.075 128.800,261.268 128.800 C 261.460 128.800,261.821 128.353,262.069 127.808 C 262.318 127.262,262.854 126.710,263.261 126.581 C 263.667 126.452,264.000 126.107,264.000 125.814 C 264.000 125.226,265.137 123.791,268.300 120.388 C 269.455 119.145,270.402 117.964,270.404 117.764 C 270.407 117.564,271.257 116.500,272.293 115.400 C 273.330 114.300,274.751 112.500,275.452 111.400 C 276.152 110.300,277.099 108.950,277.557 108.400 C 278.347 107.449,278.877 106.751,281.900 102.675 C 282.615 101.711,283.200 100.742,283.200 100.523 C 283.200 100.303,283.560 99.798,284.000 99.400 C 284.440 99.002,284.805 98.479,284.811 98.238 C 284.817 97.997,285.357 97.093,286.011 96.229 C 286.665 95.365,287.200 94.444,287.200 94.183 C 287.200 93.922,287.549 93.265,287.975 92.723 C 288.484 92.075,289.049 90.024,289.626 86.723 L 290.502 81.707 289.673 77.857 C 288.750 73.572,286.693 70.321,284.100 69.050 C 283.385 68.700,282.800 68.255,282.800 68.062 C 282.800 66.138,270.408 66.583,267.762 68.602 C 267.042 69.151,266.306 69.601,266.127 69.603 C 265.821 69.605,265.465 70.104,263.387 73.440 C 262.939 74.158,262.287 75.073,261.937 75.473 C 261.587 75.873,261.177 76.920,261.025 77.800 C 260.873 78.680,260.415 80.120,260.007 81.000 C 259.599 81.880,259.060 83.621,258.810 84.869 C 258.561 86.117,258.108 87.345,257.804 87.597 C 257.500 87.849,257.129 88.628,256.980 89.328 C 256.253 92.731,252.299 98.111,250.128 98.651 C 249.508 98.805,248.522 99.284,247.937 99.714 C 246.572 100.718,239.570 100.597,237.959 99.541 C 237.425 99.191,236.421 98.780,235.729 98.628 C 234.300 98.315,230.800 95.744,230.800 95.008 C 230.800 94.742,230.456 94.213,230.037 93.833 C 229.617 93.453,229.061 92.570,228.801 91.871 C 228.541 91.172,228.030 90.060,227.664 89.400 C 226.692 87.644,226.704 77.263,227.681 74.986 C 228.055 74.114,228.560 72.379,228.803 71.131 C 229.045 69.883,229.485 68.661,229.780 68.416 C 230.075 68.172,230.435 67.338,230.580 66.563 C 230.726 65.789,231.185 64.815,231.601 64.399 C 232.017 63.983,232.546 62.942,232.777 62.087 C 233.755 58.453,242.548 48.337,247.378 45.287 C 248.260 44.731,249.224 44.033,249.520 43.737 C 249.815 43.442,250.292 43.200,250.580 43.200 C 250.867 43.200,251.347 42.905,251.645 42.545 C 251.944 42.185,252.936 41.570,253.850 41.178 C 254.764 40.787,255.625 40.283,255.763 40.060 C 255.901 39.837,257.018 39.445,258.246 39.190 C 259.473 38.936,261.045 38.397,261.739 37.994 C 262.432 37.591,263.990 37.072,265.200 36.841 C 266.410 36.610,268.120 36.154,269.000 35.828 C 271.346 34.959,284.319 34.959,287.036 35.828 M127.354 38.155 C 128.084 38.460,129.422 38.835,130.327 38.988 C 131.912 39.255,136.000 42.073,136.000 42.897 C 136.000 43.093,136.435 43.826,136.966 44.527 C 137.498 45.227,138.065 46.520,138.227 47.400 C 138.388 48.280,138.809 49.442,139.160 49.982 C 140.147 51.498,140.140 176.917,139.152 178.423 C 138.796 178.967,138.372 180.039,138.210 180.806 C 137.847 182.521,135.659 185.855,134.013 187.200 C 133.340 187.750,132.421 188.526,131.970 188.925 C 128.318 192.153,116.704 192.171,113.722 188.953 C 113.236 188.429,112.667 188.000,112.459 188.000 C 111.549 188.000,108.376 184.193,107.985 182.631 C 107.761 181.734,107.267 180.460,106.888 179.800 C 106.249 178.686,106.186 174.701,106.000 124.000 L 105.800 69.400 98.800 69.167 C 93.699 68.998,91.420 68.763,90.400 68.304 C 89.630 67.958,88.280 67.480,87.400 67.242 C 85.100 66.622,81.069 62.533,80.585 60.330 C 80.425 59.605,80.004 58.567,79.648 58.024 C 78.588 56.406,78.747 50.255,79.902 48.206 C 80.396 47.329,80.800 46.492,80.800 46.346 C 80.800 44.211,86.102 39.371,88.856 38.992 C 89.996 38.836,91.485 38.465,92.164 38.169 C 93.999 37.371,125.446 37.358,127.354 38.155 M124.200 213.447 C 124.640 213.555,126.947 213.802,129.326 213.995 C 132.270 214.234,134.129 214.595,135.142 215.123 C 135.962 215.550,137.255 216.032,138.016 216.193 C 138.777 216.354,139.760 216.805,140.200 217.194 C 140.640 217.583,141.672 218.117,142.494 218.380 C 143.316 218.643,144.089 219.020,144.211 219.218 C 144.333 219.415,145.191 219.915,146.117 220.328 C 147.042 220.741,148.551 221.812,149.469 222.709 C 150.386 223.605,151.511 224.539,151.969 224.783 C 152.426 225.028,152.800 225.480,152.800 225.787 C 152.800 226.095,153.160 226.460,153.600 226.600 C 154.040 226.740,154.400 226.995,154.400 227.168 C 154.400 227.340,154.895 228.028,155.500 228.696 C 157.402 230.795,158.181 231.819,158.800 233.028 C 159.130 233.672,159.805 234.810,160.300 235.556 C 160.795 236.302,161.200 237.254,161.200 237.672 C 161.200 238.090,161.558 238.920,161.995 239.516 C 162.433 240.112,162.975 241.590,163.201 242.800 C 163.426 244.010,163.917 245.630,164.292 246.400 C 165.262 248.397,165.223 258.293,164.236 260.535 C 163.864 261.380,163.373 263.090,163.145 264.335 C 162.917 265.581,162.406 267.140,162.008 267.800 C 161.611 268.460,161.168 269.561,161.023 270.246 C 160.879 270.931,160.453 271.831,160.077 272.246 C 159.702 272.661,159.172 273.500,158.901 274.111 C 158.629 274.722,158.135 275.327,157.803 275.454 C 157.472 275.581,157.200 275.934,157.200 276.237 C 157.200 276.541,155.441 278.546,153.291 280.694 L 149.381 284.600 150.645 285.700 C 151.341 286.305,152.078 286.800,152.283 286.800 C 152.488 286.800,153.261 287.340,154.000 288.000 C 154.739 288.660,155.592 289.200,155.896 289.200 C 156.577 289.200,165.200 297.893,165.200 298.580 C 165.200 298.853,165.544 299.387,165.963 299.767 C 166.383 300.147,166.961 301.022,167.246 301.712 C 167.532 302.401,168.078 303.278,168.461 303.661 C 168.843 304.043,169.280 305.020,169.432 305.832 C 169.585 306.645,170.035 307.635,170.432 308.032 C 170.830 308.430,171.265 309.440,171.400 310.278 C 171.534 311.115,171.922 312.428,172.262 313.196 C 173.751 316.565,173.834 327.570,172.404 332.000 C 172.014 333.210,171.578 334.857,171.436 335.659 C 171.295 336.462,170.847 337.542,170.442 338.059 C 170.036 338.577,169.572 339.603,169.411 340.341 C 169.250 341.078,168.803 341.997,168.417 342.383 C 168.031 342.769,167.604 343.530,167.467 344.076 C 167.330 344.621,166.719 345.709,166.109 346.494 C 165.499 347.278,164.640 348.425,164.200 349.041 C 161.507 352.814,155.605 358.487,153.541 359.287 C 153.133 359.445,152.800 359.764,152.800 359.997 C 152.800 360.230,152.338 360.596,151.773 360.810 C 151.208 361.025,150.156 361.651,149.435 362.200 C 148.714 362.750,147.854 363.200,147.524 363.200 C 147.194 363.200,146.598 363.561,146.198 364.002 C 145.799 364.443,144.737 364.999,143.836 365.239 C 142.936 365.478,141.923 365.922,141.584 366.223 C 141.245 366.525,139.985 366.973,138.784 367.219 C 137.583 367.464,135.658 368.007,134.506 368.425 C 129.102 370.385,108.919 370.476,104.499 368.560 C 103.674 368.203,101.759 367.664,100.241 367.364 C 98.724 367.063,97.170 366.535,96.789 366.190 C 96.407 365.844,95.436 365.380,94.631 365.157 C 93.825 364.935,92.519 364.314,91.727 363.777 C 90.936 363.239,90.083 362.800,89.833 362.800 C 89.583 362.800,89.070 362.440,88.693 362.000 C 88.316 361.560,87.739 361.200,87.411 361.200 C 86.818 361.200,85.285 360.005,83.179 357.900 C 82.574 357.295,81.962 356.800,81.819 356.800 C 81.401 356.800,76.691 351.809,75.600 350.209 C 75.050 349.402,74.105 348.175,73.500 347.482 C 72.895 346.789,72.400 346.019,72.400 345.772 C 72.400 345.525,72.039 344.907,71.598 344.398 C 71.158 343.890,70.612 342.737,70.386 341.837 C 70.160 340.937,69.576 339.315,69.088 338.233 C 68.306 336.500,68.200 335.593,68.200 330.628 L 68.200 324.990 69.487 322.995 C 71.020 320.617,72.597 318.966,74.100 318.165 C 74.705 317.843,75.200 317.426,75.200 317.238 C 75.200 317.051,75.785 316.672,76.500 316.396 C 77.215 316.121,78.568 315.542,79.506 315.109 C 86.000 312.116,93.747 316.382,98.197 325.400 C 98.523 326.060,99.241 327.140,99.793 327.800 C 100.345 328.460,100.797 329.204,100.798 329.454 C 100.799 329.704,101.250 330.203,101.800 330.563 C 102.350 330.924,102.800 331.400,102.800 331.623 C 102.800 332.126,105.441 334.800,105.938 334.800 C 106.138 334.800,106.511 335.052,106.767 335.360 C 107.023 335.668,108.620 336.613,110.316 337.460 L 113.400 339.000 119.210 339.000 C 124.629 338.999,125.097 338.939,126.164 338.100 C 126.793 337.605,127.527 337.200,127.794 337.200 C 128.061 337.200,129.025 336.660,129.937 336.000 C 130.848 335.340,131.746 334.800,131.932 334.800 C 132.119 334.800,132.477 334.350,132.727 333.800 C 132.978 333.250,133.361 332.800,133.579 332.800 C 134.205 332.800,136.707 328.632,137.216 326.740 C 137.470 325.796,137.931 324.663,138.239 324.223 C 139.001 323.135,138.978 318.432,138.203 316.946 C 137.874 316.316,137.405 314.785,137.159 313.544 C 136.722 311.333,133.336 306.800,132.122 306.800 C 131.894 306.800,131.270 306.456,130.735 306.035 C 130.119 305.550,128.055 304.964,125.114 304.437 C 122.557 303.979,119.989 303.424,119.406 303.202 C 118.824 302.981,117.396 302.800,116.234 302.800 C 114.776 302.800,113.564 302.505,112.333 301.850 C 111.350 301.328,110.109 300.768,109.573 300.606 C 109.038 300.445,108.240 299.974,107.800 299.560 C 107.360 299.147,106.318 298.194,105.485 297.443 C 101.195 293.576,101.266 282.600,105.611 278.195 C 108.096 275.675,108.636 275.287,110.590 274.624 C 111.601 274.281,112.827 273.744,113.314 273.431 C 113.801 273.118,115.231 272.674,116.490 272.446 C 117.750 272.218,119.282 271.771,119.895 271.454 C 120.508 271.137,122.125 270.658,123.487 270.390 C 124.892 270.114,126.258 269.578,126.644 269.152 C 127.018 268.738,127.571 268.400,127.872 268.400 C 128.173 268.400,128.591 267.950,128.800 267.400 C 129.009 266.850,129.369 266.400,129.599 266.400 C 129.829 266.400,130.230 265.905,130.489 265.300 C 130.749 264.695,131.330 263.660,131.780 263.000 C 133.024 261.179,132.988 254.274,131.728 252.671 C 131.248 252.061,130.747 251.071,130.615 250.469 C 130.383 249.413,128.940 248.090,125.400 245.686 C 123.146 244.156,112.938 244.004,111.071 245.472 C 110.461 245.952,109.453 246.457,108.831 246.593 C 107.749 246.831,103.437 250.602,102.600 252.043 C 102.380 252.422,101.345 253.829,100.300 255.171 C 99.255 256.512,98.400 257.754,98.400 257.932 C 98.400 258.110,97.995 258.639,97.500 259.108 C 97.005 259.577,96.362 260.195,96.071 260.480 C 95.780 260.766,95.150 261.375,94.671 261.834 C 91.904 264.484,85.971 265.603,82.884 264.057 C 82.068 263.648,80.916 263.197,80.325 263.056 C 78.997 262.737,75.539 259.425,74.600 257.572 C 74.217 256.818,73.671 255.930,73.387 255.600 C 71.529 253.443,71.633 242.620,73.536 240.000 C 73.935 239.450,74.448 238.460,74.676 237.800 C 75.064 236.672,76.317 234.601,77.905 232.464 C 79.161 230.774,84.307 225.645,85.480 224.915 C 86.112 224.522,86.982 223.874,87.415 223.475 C 89.196 221.830,91.311 220.439,92.393 220.202 C 93.026 220.062,93.752 219.699,94.004 219.395 C 94.257 219.090,95.125 218.629,95.932 218.370 C 96.739 218.111,97.698 217.639,98.062 217.322 C 98.426 217.004,99.506 216.503,100.462 216.208 C 101.418 215.913,102.873 215.384,103.697 215.032 C 104.520 214.680,107.220 214.203,109.697 213.971 C 112.173 213.739,115.190 213.410,116.400 213.240 C 118.536 212.939,122.575 213.046,124.200 213.447 M295.474 213.243 C 296.093 213.486,297.927 213.840,299.549 214.029 C 301.196 214.220,302.962 214.687,303.549 215.085 C 304.127 215.477,305.098 216.015,305.706 216.282 C 306.315 216.548,306.919 217.044,307.049 217.383 C 307.179 217.722,307.471 218.000,307.697 218.000 C 308.326 218.000,312.767 222.463,313.055 223.386 C 313.195 223.833,313.735 224.709,314.255 225.331 C 314.775 225.953,315.200 226.765,315.200 227.137 C 315.200 227.508,315.557 228.479,315.994 229.294 C 317.411 231.938,317.593 236.638,317.597 270.676 C 317.599 292.218,317.738 303.638,318.001 303.801 C 318.222 303.937,319.257 304.210,320.301 304.408 C 324.002 305.108,327.533 306.209,328.293 306.900 C 328.716 307.285,329.274 307.600,329.533 307.600 C 329.791 307.600,330.790 308.365,331.753 309.300 C 337.632 315.012,337.450 325.785,331.398 330.400 C 330.388 331.170,329.041 332.212,328.404 332.716 C 327.594 333.357,326.152 333.808,323.590 334.223 C 321.579 334.548,319.426 335.076,318.807 335.396 L 317.682 335.978 317.541 347.295 L 317.400 358.612 316.001 361.339 C 314.365 364.529,311.959 366.706,309.243 367.455 C 308.229 367.734,306.680 368.233,305.800 368.564 C 303.729 369.342,299.046 369.336,297.000 368.553 C 296.120 368.216,294.673 367.767,293.784 367.556 C 292.297 367.202,291.029 366.213,288.109 363.129 C 287.619 362.612,287.102 361.561,286.960 360.794 C 286.818 360.027,286.409 358.950,286.051 358.400 C 285.505 357.562,285.368 355.683,285.200 346.800 C 285.090 340.970,284.854 335.975,284.676 335.700 C 284.424 335.309,279.216 335.199,260.876 335.197 C 235.139 335.194,229.900 334.820,227.288 332.799 C 226.690 332.336,225.480 331.415,224.600 330.751 C 219.843 327.167,218.180 318.246,221.402 313.597 C 221.951 312.805,222.400 311.955,222.400 311.709 C 222.400 311.463,222.816 310.753,223.325 310.131 C 224.613 308.555,226.199 305.687,226.786 303.872 C 227.058 303.032,227.521 302.252,227.816 302.139 C 228.110 302.026,228.461 301.433,228.595 300.821 C 228.730 300.209,229.146 299.369,229.520 298.954 C 229.894 298.539,230.512 297.525,230.894 296.700 C 231.275 295.875,231.741 295.200,231.930 295.200 C 232.119 295.200,232.491 294.475,232.756 293.589 C 233.021 292.704,233.680 291.329,234.219 290.534 C 234.759 289.739,235.200 288.866,235.200 288.593 C 235.200 288.321,235.472 287.872,235.805 287.596 C 236.137 287.320,236.770 286.353,237.210 285.447 C 237.650 284.541,238.262 283.350,238.570 282.800 C 238.878 282.250,239.336 281.350,239.588 280.800 C 239.840 280.250,240.565 278.900,241.199 277.800 C 241.834 276.700,242.671 275.170,243.060 274.400 C 243.448 273.630,244.067 272.640,244.434 272.200 C 244.801 271.760,245.322 270.712,245.591 269.872 C 245.860 269.032,246.315 268.254,246.601 268.144 C 246.887 268.034,247.233 267.352,247.369 266.627 C 247.504 265.903,247.987 264.974,248.441 264.563 C 248.895 264.152,249.511 263.273,249.811 262.608 C 250.111 261.944,250.617 260.950,250.936 260.400 C 251.255 259.850,252.113 258.140,252.843 256.600 C 253.574 255.060,254.502 253.350,254.907 252.800 C 256.468 250.678,257.520 248.853,257.971 247.486 C 258.230 246.704,258.690 245.857,258.995 245.604 C 259.299 245.352,259.655 244.662,259.786 244.072 C 259.916 243.483,260.379 242.550,260.814 242.000 C 262.421 239.968,263.726 237.764,264.082 236.483 C 264.282 235.759,264.886 234.519,265.423 233.727 C 265.961 232.936,266.400 232.054,266.400 231.767 C 266.400 231.480,266.719 231.010,267.109 230.723 C 267.499 230.435,268.156 229.435,268.570 228.500 C 268.983 227.565,269.446 226.800,269.597 226.800 C 269.749 226.800,270.076 226.124,270.323 225.298 C 271.038 222.914,275.927 217.493,278.600 216.120 C 279.260 215.781,280.098 215.243,280.462 214.924 C 280.838 214.595,282.654 214.180,284.662 213.963 C 286.608 213.753,289.010 213.428,290.000 213.241 C 292.632 212.743,294.204 212.743,295.474 213.243 M284.300 252.631 C 284.135 252.797,284.000 253.250,284.000 253.636 C 284.000 254.022,283.550 254.873,283.000 255.527 C 282.450 256.181,282.000 256.872,282.000 257.064 C 282.000 257.255,281.617 258.126,281.150 258.999 C 280.682 259.871,280.047 261.300,279.739 262.173 C 279.431 263.046,278.944 264.039,278.657 264.380 C 278.370 264.721,277.820 265.855,277.435 266.900 C 277.049 267.945,276.583 268.800,276.398 268.800 C 276.213 268.800,275.846 269.475,275.583 270.300 C 275.319 271.125,274.765 272.361,274.351 273.047 C 273.938 273.733,273.600 274.563,273.600 274.891 C 273.600 275.220,273.178 276.111,272.662 276.871 C 272.146 277.631,271.601 278.741,271.452 279.337 C 271.302 279.933,270.865 280.735,270.480 281.120 C 270.096 281.504,269.555 282.572,269.280 283.492 C 269.004 284.412,268.528 285.415,268.221 285.722 C 267.914 286.029,267.468 287.006,267.229 287.893 C 266.990 288.781,266.537 289.720,266.223 289.981 C 265.909 290.242,265.540 290.961,265.405 291.578 C 265.269 292.196,264.718 293.299,264.179 294.028 C 263.641 294.758,263.199 295.635,263.199 295.978 C 263.198 296.320,262.803 297.230,262.321 298.000 C 260.666 300.646,259.929 303.319,260.694 303.900 C 261.944 304.849,284.267 304.595,284.786 303.626 C 285.670 301.975,285.191 251.733,284.300 252.631 ' stroke='none' fill='%233c8cc4' fill-rule='evenodd'%3E%3C/path%3E%3Cpath id='path2' d='M0.000 27.800 C 0.000 28.130,0.270 28.400,0.600 28.400 C 0.930 28.400,1.200 28.130,1.200 27.800 C 1.200 27.470,0.930 27.200,0.600 27.200 C 0.270 27.200,0.000 27.470,0.000 27.800 M269.000 35.828 C 268.120 36.154,266.410 36.610,265.200 36.841 C 263.990 37.072,262.432 37.591,261.739 37.994 C 261.045 38.397,259.473 38.936,258.246 39.190 C 257.018 39.445,255.901 39.837,255.763 40.060 C 255.625 40.283,254.764 40.787,253.850 41.178 C 252.936 41.570,251.944 42.185,251.645 42.545 C 251.347 42.905,250.867 43.200,250.580 43.200 C 250.292 43.200,249.815 43.442,249.520 43.737 C 249.224 44.033,248.260 44.731,247.378 45.287 C 242.548 48.337,233.755 58.453,232.777 62.087 C 232.546 62.942,232.017 63.983,231.601 64.399 C 231.185 64.815,230.726 65.789,230.580 66.563 C 230.435 67.338,230.075 68.172,229.780 68.416 C 229.485 68.661,229.045 69.883,228.803 71.131 C 228.560 72.379,228.055 74.114,227.681 74.986 C 226.704 77.263,226.692 87.644,227.664 89.400 C 228.030 90.060,228.541 91.172,228.801 91.871 C 229.061 92.570,229.617 93.453,230.037 93.833 C 230.456 94.213,230.800 94.742,230.800 95.008 C 230.800 95.744,234.300 98.315,235.729 98.628 C 236.421 98.780,237.425 99.191,237.959 99.541 C 239.570 100.597,246.572 100.718,247.937 99.714 C 248.522 99.284,249.508 98.805,250.128 98.651 C 252.299 98.111,256.253 92.731,256.980 89.328 C 257.129 88.628,257.500 87.849,257.804 87.597 C 258.108 87.345,258.561 86.117,258.810 84.869 C 259.060 83.621,259.599 81.880,260.007 81.000 C 260.415 80.120,260.873 78.680,261.025 77.800 C 261.177 76.920,261.587 75.873,261.937 75.473 C 262.287 75.073,262.939 74.158,263.387 73.440 C 265.465 70.104,265.821 69.605,266.127 69.603 C 266.306 69.601,267.042 69.151,267.762 68.602 C 270.408 66.583,282.800 66.138,282.800 68.062 C 282.800 68.255,283.385 68.700,284.100 69.050 C 286.693 70.321,288.750 73.572,289.673 77.857 L 290.502 81.707 289.626 86.723 C 289.049 90.024,288.484 92.075,287.975 92.723 C 287.549 93.265,287.200 93.922,287.200 94.183 C 287.200 94.444,286.665 95.365,286.011 96.229 C 285.357 97.093,284.817 97.997,284.811 98.238 C 284.805 98.479,284.440 99.002,284.000 99.400 C 283.560 99.798,283.200 100.303,283.200 100.523 C 283.200 100.742,282.615 101.711,281.900 102.675 C 278.877 106.751,278.347 107.449,277.557 108.400 C 277.099 108.950,276.152 110.300,275.452 111.400 C 274.751 112.500,273.330 114.300,272.293 115.400 C 271.257 116.500,270.407 117.564,270.404 117.764 C 270.402 117.964,269.455 119.145,268.300 120.388 C 265.137 123.791,264.000 125.226,264.000 125.814 C 264.000 126.107,263.667 126.452,263.261 126.581 C 262.854 126.710,262.318 127.262,262.069 127.808 C 261.821 128.353,261.460 128.800,261.268 128.800 C 261.075 128.800,260.097 129.835,259.093 131.100 C 258.089 132.365,256.397 134.318,255.334 135.439 C 254.270 136.561,252.950 138.044,252.400 138.735 C 251.850 139.425,250.500 140.967,249.400 142.160 C 248.300 143.353,246.590 145.261,245.600 146.400 C 244.610 147.539,242.928 149.400,241.861 150.535 C 240.795 151.671,239.515 153.233,239.016 154.006 C 238.517 154.779,237.814 155.656,237.454 155.955 C 237.094 156.254,236.800 156.715,236.800 156.981 C 236.800 157.247,236.350 157.706,235.800 158.000 C 235.250 158.294,234.800 158.678,234.800 158.853 C 234.800 159.029,234.435 159.583,233.990 160.086 C 226.650 168.366,225.128 172.492,226.572 180.190 C 227.112 183.067,231.191 187.251,234.398 188.216 C 234.948 188.381,235.608 188.805,235.866 189.158 C 236.673 190.261,318.551 190.334,320.040 189.233 C 320.619 188.806,321.701 188.197,322.446 187.881 C 324.196 187.137,327.475 184.224,327.834 183.093 C 327.987 182.611,328.492 181.702,328.956 181.074 C 331.637 177.447,328.906 165.376,325.134 164.179 C 324.716 164.046,323.938 163.502,323.405 162.969 C 322.872 162.436,322.134 162.000,321.765 162.000 C 321.396 162.000,320.443 161.595,319.647 161.100 C 318.203 160.202,318.155 160.200,298.400 160.101 C 276.903 159.994,276.349 159.961,277.355 158.850 C 277.710 158.458,278.000 157.926,278.000 157.669 C 278.000 157.411,278.178 157.200,278.395 157.200 C 278.612 157.200,279.216 156.525,279.738 155.700 C 280.259 154.875,281.322 153.570,282.100 152.800 C 282.878 152.030,284.728 149.960,286.210 148.201 C 287.693 146.441,289.242 144.766,289.653 144.478 C 290.064 144.190,290.400 143.760,290.400 143.523 C 290.400 143.286,290.805 142.690,291.300 142.200 C 292.064 141.442,293.389 139.958,296.800 136.039 C 298.831 133.706,300.800 131.218,300.800 130.986 C 300.800 130.837,301.250 130.361,301.800 129.929 C 302.350 129.496,302.800 128.983,302.800 128.789 C 302.800 128.595,303.230 127.958,303.755 127.373 C 306.062 124.802,309.200 120.614,309.200 120.106 C 309.200 119.875,309.474 119.580,309.810 119.452 C 310.145 119.323,310.551 118.899,310.712 118.509 C 310.874 118.119,311.724 116.746,312.603 115.457 C 314.627 112.487,316.237 109.790,317.053 108.000 C 317.404 107.230,318.007 106.150,318.393 105.600 C 318.779 105.050,319.233 104.150,319.403 103.600 C 319.572 103.050,320.033 102.187,320.427 101.681 C 320.822 101.176,321.270 100.193,321.423 99.497 C 321.575 98.801,322.027 97.595,322.425 96.816 C 322.824 96.037,323.349 94.230,323.592 92.800 C 323.836 91.370,324.320 89.480,324.670 88.600 C 325.571 86.330,325.576 73.728,324.677 71.400 C 324.337 70.520,323.852 68.540,323.600 67.000 C 323.348 65.460,322.818 63.660,322.422 63.000 C 322.027 62.340,321.585 61.300,321.441 60.690 C 321.297 60.079,320.842 59.242,320.429 58.829 C 320.017 58.417,319.547 57.656,319.385 57.139 C 319.223 56.623,318.665 55.691,318.145 55.069 C 317.625 54.447,317.199 53.817,317.197 53.669 C 317.194 53.451,314.842 50.782,312.119 47.908 C 311.014 46.741,307.287 43.886,305.950 43.181 C 305.428 42.906,304.909 42.543,304.797 42.374 C 304.364 41.720,299.317 39.305,297.800 39.026 C 296.920 38.865,295.903 38.466,295.539 38.140 C 295.176 37.814,293.556 37.301,291.939 37.001 C 290.323 36.702,288.116 36.173,287.036 35.828 C 284.319 34.959,271.346 34.959,269.000 35.828 M287.400 37.505 C 289.820 37.961,292.610 38.705,293.600 39.158 C 294.590 39.612,295.760 39.987,296.200 39.993 C 296.640 39.998,297.589 40.362,298.310 40.801 C 299.030 41.241,299.836 41.600,300.102 41.600 C 300.886 41.600,305.187 44.372,308.221 46.833 C 312.823 50.568,315.366 53.529,318.991 59.379 C 323.622 66.852,325.011 82.469,321.929 92.400 C 321.485 93.830,320.878 95.900,320.580 97.000 C 320.283 98.100,319.422 100.170,318.667 101.600 C 317.913 103.030,316.459 105.820,315.437 107.800 C 314.415 109.780,313.051 112.120,312.406 113.000 C 311.762 113.880,310.569 115.590,309.756 116.800 C 308.943 118.010,308.080 119.292,307.839 119.650 C 307.453 120.222,303.241 125.718,300.706 128.958 C 300.208 129.594,299.350 130.600,298.800 131.193 C 298.250 131.785,297.260 132.970,296.600 133.826 C 295.318 135.488,292.877 138.340,292.172 139.000 C 291.937 139.220,290.679 140.660,289.377 142.200 C 286.854 145.183,280.372 152.466,279.943 152.800 C 279.802 152.910,278.957 153.990,278.067 155.200 C 277.176 156.410,276.045 157.797,275.552 158.282 C 274.785 159.036,274.721 159.308,275.109 160.161 L 275.564 161.158 295.282 161.305 C 322.412 161.508,325.370 162.434,327.631 171.440 L 328.584 175.236 327.705 178.638 C 326.423 183.595,324.601 185.517,319.096 187.719 L 316.392 188.800 278.264 188.800 L 240.136 188.800 237.216 187.752 C 233.049 186.255,229.200 183.383,229.200 181.770 C 229.200 181.601,228.905 181.137,228.545 180.739 C 226.092 178.029,228.037 169.004,231.986 164.770 C 233.713 162.918,236.000 160.123,236.000 159.864 C 236.000 159.759,236.765 158.882,237.700 157.914 C 238.635 156.946,239.850 155.593,240.400 154.908 C 240.950 154.223,243.574 151.173,246.232 148.131 C 252.741 140.679,253.862 139.412,256.238 136.822 C 257.359 135.600,260.862 131.540,264.022 127.800 C 267.182 124.060,269.965 120.820,270.206 120.600 C 270.447 120.380,271.444 119.126,272.422 117.814 C 274.344 115.235,274.652 114.849,276.307 112.937 C 276.908 112.243,278.030 110.751,278.800 109.623 C 279.570 108.494,281.300 106.092,282.645 104.285 C 283.990 102.478,285.481 100.280,285.958 99.400 C 286.435 98.520,287.391 96.900,288.082 95.800 C 295.211 84.453,292.165 69.994,281.768 65.831 C 271.472 61.710,260.860 68.807,258.192 81.600 C 257.894 83.030,257.279 84.913,256.825 85.785 C 256.371 86.656,256.000 87.610,256.000 87.903 C 256.000 88.708,252.805 94.367,251.531 95.817 C 250.733 96.727,249.522 97.384,247.286 98.123 L 244.157 99.157 239.840 98.182 C 231.910 96.389,228.846 92.223,228.823 83.200 C 228.807 77.269,230.583 68.782,232.423 66.000 C 232.641 65.670,233.275 64.500,233.831 63.400 C 234.388 62.300,235.132 60.860,235.484 60.200 C 237.258 56.880,243.340 50.176,246.925 47.589 C 247.984 46.825,249.360 45.795,249.983 45.300 C 250.606 44.805,251.279 44.400,251.479 44.400 C 251.679 44.400,252.559 43.873,253.434 43.229 C 254.309 42.586,255.560 41.927,256.213 41.766 C 256.866 41.605,257.760 41.247,258.200 40.969 C 258.640 40.692,259.810 40.256,260.800 40.000 C 261.790 39.744,263.015 39.269,263.523 38.943 C 264.030 38.618,265.920 38.092,267.723 37.774 C 269.525 37.456,271.540 37.026,272.200 36.817 C 274.105 36.214,282.592 36.598,287.400 37.505 M92.164 38.169 C 91.485 38.465,89.996 38.836,88.856 38.992 C 86.102 39.371,80.800 44.211,80.800 46.346 C 80.800 46.492,80.396 47.329,79.902 48.206 C 78.747 50.255,78.588 56.406,79.648 58.024 C 80.004 58.567,80.425 59.605,80.585 60.330 C 81.069 62.533,85.100 66.622,87.400 67.242 C 88.280 67.480,89.630 67.958,90.400 68.304 C 91.420 68.763,93.699 68.998,98.800 69.167 L 105.800 69.400 106.000 124.000 C 106.186 174.701,106.249 178.686,106.888 179.800 C 107.267 180.460,107.761 181.734,107.985 182.631 C 108.376 184.193,111.549 188.000,112.459 188.000 C 112.667 188.000,113.236 188.429,113.722 188.953 C 116.704 192.171,128.318 192.153,131.970 188.925 C 132.421 188.526,133.340 187.750,134.013 187.200 C 135.659 185.855,137.847 182.521,138.210 180.806 C 138.372 180.039,138.796 178.967,139.152 178.423 C 140.140 176.917,140.147 51.498,139.160 49.982 C 138.809 49.442,138.388 48.280,138.227 47.400 C 138.065 46.520,137.498 45.227,136.966 44.527 C 136.435 43.826,136.000 43.093,136.000 42.897 C 136.000 42.073,131.912 39.255,130.327 38.988 C 129.422 38.835,128.084 38.460,127.354 38.155 C 125.446 37.358,93.999 37.371,92.164 38.169 M128.001 40.000 C 132.874 40.924,136.660 45.041,137.541 50.373 C 138.191 54.310,138.194 173.815,137.544 177.567 C 136.601 183.010,132.251 188.177,127.726 189.227 C 123.647 190.174,116.724 189.455,114.789 187.884 C 114.191 187.398,113.214 186.649,112.619 186.220 C 110.589 184.757,108.854 181.573,108.121 177.961 C 107.504 174.927,107.417 169.432,107.219 121.468 C 107.005 69.466,106.983 68.323,106.224 67.768 C 105.646 67.345,104.093 67.200,100.152 67.200 C 92.627 67.200,89.016 66.650,86.888 65.182 C 85.947 64.532,85.047 63.990,84.888 63.978 C 84.237 63.928,81.674 59.259,81.278 57.400 C 80.508 53.796,80.485 53.128,81.039 50.480 C 82.117 45.328,86.367 40.748,90.758 40.006 C 93.527 39.537,125.535 39.533,128.001 40.000 M116.400 213.240 C 115.190 213.410,112.173 213.739,109.697 213.971 C 107.220 214.203,104.520 214.680,103.697 215.032 C 102.873 215.384,101.418 215.913,100.462 216.208 C 99.506 216.503,98.426 217.004,98.062 217.322 C 97.698 217.639,96.739 218.111,95.932 218.370 C 95.125 218.629,94.257 219.090,94.004 219.395 C 93.752 219.699,93.026 220.062,92.393 220.202 C 91.311 220.439,89.196 221.830,87.415 223.475 C 86.982 223.874,86.112 224.522,85.480 224.915 C 84.307 225.645,79.161 230.774,77.905 232.464 C 76.317 234.601,75.064 236.672,74.676 237.800 C 74.448 238.460,73.935 239.450,73.536 240.000 C 71.633 242.620,71.529 253.443,73.387 255.600 C 73.671 255.930,74.217 256.818,74.600 257.572 C 75.539 259.425,78.997 262.737,80.325 263.056 C 80.916 263.197,82.068 263.648,82.884 264.057 C 85.971 265.603,91.904 264.484,94.671 261.834 C 95.150 261.375,95.780 260.766,96.071 260.480 C 96.362 260.195,97.005 259.577,97.500 259.108 C 97.995 258.639,98.400 258.110,98.400 257.932 C 98.400 257.754,99.255 256.512,100.300 255.171 C 101.345 253.829,102.380 252.422,102.600 252.043 C 103.437 250.602,107.749 246.831,108.831 246.593 C 109.453 246.457,110.461 245.952,111.071 245.472 C 112.938 244.004,123.146 244.156,125.400 245.686 C 128.940 248.090,130.383 249.413,130.615 250.469 C 130.747 251.071,131.248 252.061,131.728 252.671 C 132.988 254.274,133.024 261.179,131.780 263.000 C 131.330 263.660,130.749 264.695,130.489 265.300 C 130.230 265.905,129.829 266.400,129.599 266.400 C 129.369 266.400,129.009 266.850,128.800 267.400 C 128.591 267.950,128.173 268.400,127.872 268.400 C 127.571 268.400,127.018 268.738,126.644 269.152 C 126.258 269.578,124.892 270.114,123.487 270.390 C 122.125 270.658,120.508 271.137,119.895 271.454 C 119.282 271.771,117.750 272.218,116.490 272.446 C 115.231 272.674,113.801 273.118,113.314 273.431 C 112.827 273.744,111.601 274.281,110.590 274.624 C 102.411 277.401,99.196 291.775,105.485 297.443 C 106.318 298.194,107.360 299.147,107.800 299.560 C 108.240 299.974,109.038 300.445,109.573 300.606 C 110.109 300.768,111.350 301.328,112.333 301.850 C 113.564 302.505,114.776 302.800,116.234 302.800 C 117.396 302.800,118.824 302.981,119.406 303.202 C 119.989 303.424,122.557 303.979,125.114 304.437 C 128.055 304.964,130.119 305.550,130.735 306.035 C 131.270 306.456,131.894 306.800,132.122 306.800 C 133.336 306.800,136.722 311.333,137.159 313.544 C 137.405 314.785,137.874 316.316,138.203 316.946 C 138.978 318.432,139.001 323.135,138.239 324.223 C 137.931 324.663,137.470 325.796,137.216 326.740 C 136.707 328.632,134.205 332.800,133.579 332.800 C 133.361 332.800,132.978 333.250,132.727 333.800 C 132.477 334.350,132.119 334.800,131.932 334.800 C 131.746 334.800,130.848 335.340,129.937 336.000 C 129.025 336.660,128.061 337.200,127.794 337.200 C 127.527 337.200,126.793 337.605,126.164 338.100 C 125.097 338.939,124.629 338.999,119.210 339.000 L 113.400 339.000 110.316 337.460 C 108.620 336.613,107.023 335.668,106.767 335.360 C 106.511 335.052,106.138 334.800,105.938 334.800 C 105.441 334.800,102.800 332.126,102.800 331.623 C 102.800 331.400,102.350 330.924,101.800 330.563 C 101.250 330.203,100.799 329.704,100.798 329.454 C 100.797 329.204,100.345 328.460,99.793 327.800 C 99.241 327.140,98.523 326.060,98.197 325.400 C 93.747 316.382,86.000 312.116,79.506 315.109 C 78.568 315.542,77.215 316.121,76.500 316.396 C 75.785 316.672,75.200 317.051,75.200 317.238 C 75.200 317.426,74.705 317.843,74.100 318.165 C 72.597 318.966,71.020 320.617,69.487 322.995 L 68.200 324.990 68.200 330.628 C 68.200 335.593,68.306 336.500,69.088 338.233 C 69.576 339.315,70.160 340.937,70.386 341.837 C 70.612 342.737,71.158 343.890,71.598 344.398 C 72.039 344.907,72.400 345.525,72.400 345.772 C 72.400 346.019,72.895 346.789,73.500 347.482 C 74.105 348.175,75.050 349.402,75.600 350.209 C 76.691 351.809,81.401 356.800,81.819 356.800 C 81.962 356.800,82.574 357.295,83.179 357.900 C 85.285 360.005,86.818 361.200,87.411 361.200 C 87.739 361.200,88.316 361.560,88.693 362.000 C 89.070 362.440,89.583 362.800,89.833 362.800 C 90.083 362.800,90.936 363.239,91.727 363.777 C 92.519 364.314,93.825 364.935,94.631 365.157 C 95.436 365.380,96.407 365.844,96.789 366.190 C 97.170 366.535,98.724 367.063,100.241 367.364 C 101.759 367.664,103.674 368.203,104.499 368.560 C 108.919 370.476,129.102 370.385,134.506 368.425 C 135.658 368.007,137.583 367.464,138.784 367.219 C 139.985 366.973,141.245 366.525,141.584 366.223 C 141.923 365.922,142.936 365.478,143.836 365.239 C 144.737 364.999,145.799 364.443,146.198 364.002 C 146.598 363.561,147.194 363.200,147.524 363.200 C 147.854 363.200,148.714 362.750,149.435 362.200 C 150.156 361.651,151.208 361.025,151.773 360.810 C 152.338 360.596,152.800 360.230,152.800 359.997 C 152.800 359.764,153.133 359.445,153.541 359.287 C 155.605 358.487,161.507 352.814,164.200 349.041 C 164.640 348.425,165.499 347.278,166.109 346.494 C 166.719 345.709,167.330 344.621,167.467 344.076 C 167.604 343.530,168.031 342.769,168.417 342.383 C 168.803 341.997,169.250 341.078,169.411 340.341 C 169.572 339.603,170.036 338.577,170.442 338.059 C 170.847 337.542,171.295 336.462,171.436 335.659 C 171.578 334.857,172.014 333.210,172.404 332.000 C 173.834 327.570,173.751 316.565,172.262 313.196 C 171.922 312.428,171.534 311.115,171.400 310.278 C 171.265 309.440,170.830 308.430,170.432 308.032 C 170.035 307.635,169.585 306.645,169.432 305.832 C 169.280 305.020,168.843 304.043,168.461 303.661 C 168.078 303.278,167.532 302.401,167.246 301.712 C 166.961 301.022,166.383 300.147,165.963 299.767 C 165.544 299.387,165.200 298.853,165.200 298.580 C 165.200 297.893,156.577 289.200,155.896 289.200 C 155.592 289.200,154.739 288.660,154.000 288.000 C 153.261 287.340,152.488 286.800,152.283 286.800 C 152.078 286.800,151.341 286.305,150.645 285.700 L 149.381 284.600 153.291 280.694 C 155.441 278.546,157.200 276.541,157.200 276.237 C 157.200 275.934,157.472 275.581,157.803 275.454 C 158.135 275.327,158.629 274.722,158.901 274.111 C 159.172 273.500,159.702 272.661,160.077 272.246 C 160.453 271.831,160.879 270.931,161.023 270.246 C 161.168 269.561,161.611 268.460,162.008 267.800 C 162.406 267.140,162.917 265.581,163.145 264.335 C 163.373 263.090,163.864 261.380,164.236 260.535 C 165.223 258.293,165.262 248.397,164.292 246.400 C 163.917 245.630,163.426 244.010,163.201 242.800 C 162.975 241.590,162.433 240.112,161.995 239.516 C 161.558 238.920,161.200 238.090,161.200 237.672 C 161.200 237.254,160.795 236.302,160.300 235.556 C 159.805 234.810,159.130 233.672,158.800 233.028 C 158.181 231.819,157.402 230.795,155.500 228.696 C 154.895 228.028,154.400 227.340,154.400 227.168 C 154.400 226.995,154.040 226.740,153.600 226.600 C 153.160 226.460,152.800 226.095,152.800 225.787 C 152.800 225.480,152.426 225.028,151.969 224.783 C 151.511 224.539,150.386 223.605,149.469 222.709 C 148.551 221.812,147.042 220.741,146.117 220.328 C 145.191 219.915,144.333 219.415,144.211 219.218 C 144.089 219.020,143.316 218.643,142.494 218.380 C 141.672 218.117,140.640 217.583,140.200 217.194 C 139.760 216.805,138.777 216.354,138.016 216.193 C 137.255 216.032,135.962 215.550,135.142 215.123 C 134.129 214.595,132.270 214.234,129.326 213.995 C 126.947 213.802,124.640 213.555,124.200 213.447 C 122.575 213.046,118.536 212.939,116.400 213.240 M290.000 213.241 C 289.010 213.428,286.608 213.753,284.662 213.963 C 282.654 214.180,280.838 214.595,280.462 214.924 C 280.098 215.243,279.260 215.781,278.600 216.120 C 275.927 217.493,271.038 222.914,270.323 225.298 C 270.076 226.124,269.749 226.800,269.597 226.800 C 269.446 226.800,268.983 227.565,268.570 228.500 C 268.156 229.435,267.499 230.435,267.109 230.723 C 266.719 231.010,266.400 231.480,266.400 231.767 C 266.400 232.054,265.961 232.936,265.423 233.727 C 264.886 234.519,264.282 235.759,264.082 236.483 C 263.726 237.764,262.421 239.968,260.814 242.000 C 260.379 242.550,259.916 243.483,259.786 244.072 C 259.655 244.662,259.299 245.352,258.995 245.604 C 258.690 245.857,258.230 246.704,257.971 247.486 C 257.520 248.853,256.468 250.678,254.907 252.800 C 254.502 253.350,253.574 255.060,252.843 256.600 C 252.113 258.140,251.255 259.850,250.936 260.400 C 250.617 260.950,250.111 261.944,249.811 262.608 C 249.511 263.273,248.895 264.152,248.441 264.563 C 247.987 264.974,247.504 265.903,247.369 266.627 C 247.233 267.352,246.887 268.034,246.601 268.144 C 246.315 268.254,245.860 269.032,245.591 269.872 C 245.322 270.712,244.801 271.760,244.434 272.200 C 244.067 272.640,243.448 273.630,243.060 274.400 C 242.671 275.170,241.834 276.700,241.199 277.800 C 240.565 278.900,239.840 280.250,239.588 280.800 C 239.336 281.350,238.878 282.250,238.570 282.800 C 238.262 283.350,237.650 284.541,237.210 285.447 C 236.770 286.353,236.137 287.320,235.805 287.596 C 235.472 287.872,235.200 288.321,235.200 288.593 C 235.200 288.866,234.759 289.739,234.219 290.534 C 233.680 291.329,233.021 292.704,232.756 293.589 C 232.491 294.475,232.119 295.200,231.930 295.200 C 231.741 295.200,231.275 295.875,230.894 296.700 C 230.512 297.525,229.894 298.539,229.520 298.954 C 229.146 299.369,228.730 300.209,228.595 300.821 C 228.461 301.433,228.110 302.026,227.816 302.139 C 227.521 302.252,227.058 303.032,226.786 303.872 C 226.199 305.687,224.613 308.555,223.325 310.131 C 222.816 310.753,222.400 311.463,222.400 311.709 C 222.400 311.955,221.951 312.805,221.402 313.597 C 218.180 318.246,219.843 327.167,224.600 330.751 C 225.480 331.415,226.690 332.336,227.288 332.799 C 229.900 334.820,235.139 335.194,260.876 335.197 C 279.216 335.199,284.424 335.309,284.676 335.700 C 284.854 335.975,285.090 340.970,285.200 346.800 C 285.368 355.683,285.505 357.562,286.051 358.400 C 286.409 358.950,286.818 360.027,286.960 360.794 C 287.102 361.561,287.619 362.612,288.109 363.129 C 291.029 366.213,292.297 367.202,293.784 367.556 C 294.673 367.767,296.120 368.216,297.000 368.553 C 299.046 369.336,303.729 369.342,305.800 368.564 C 306.680 368.233,308.229 367.734,309.243 367.455 C 311.959 366.706,314.365 364.529,316.001 361.339 L 317.400 358.612 317.541 347.295 L 317.682 335.978 318.807 335.396 C 319.426 335.076,321.579 334.548,323.590 334.223 C 326.152 333.808,327.594 333.357,328.404 332.716 C 329.041 332.212,330.388 331.170,331.398 330.400 C 337.450 325.785,337.632 315.012,331.753 309.300 C 330.790 308.365,329.791 307.600,329.533 307.600 C 329.274 307.600,328.716 307.285,328.293 306.900 C 327.533 306.209,324.002 305.108,320.301 304.408 C 319.257 304.210,318.222 303.937,318.001 303.801 C 317.738 303.638,317.599 292.218,317.597 270.676 C 317.593 236.638,317.411 231.938,315.994 229.294 C 315.557 228.479,315.200 227.508,315.200 227.137 C 315.200 226.765,314.775 225.953,314.255 225.331 C 313.735 224.709,313.195 223.833,313.055 223.386 C 312.767 222.463,308.326 218.000,307.697 218.000 C 307.471 218.000,307.179 217.722,307.049 217.383 C 306.919 217.044,306.315 216.548,305.706 216.282 C 305.098 216.015,304.127 215.477,303.549 215.085 C 302.962 214.687,301.196 214.220,299.549 214.029 C 297.927 213.840,296.093 213.486,295.474 213.243 C 294.204 212.743,292.632 212.743,290.000 213.241 M127.800 215.177 C 132.385 215.906,139.633 218.321,142.400 220.042 C 142.730 220.247,143.455 220.637,144.011 220.908 C 150.249 223.948,157.761 232.687,160.422 240.000 C 160.703 240.770,161.143 241.670,161.402 242.000 C 162.225 243.052,163.714 251.790,163.498 254.301 C 163.150 258.333,161.962 264.074,161.168 265.555 C 160.746 266.343,160.400 267.151,160.400 267.350 C 160.400 268.406,157.048 274.446,155.600 276.000 C 154.677 276.990,153.366 278.430,152.686 279.200 C 152.005 279.970,150.493 281.387,149.324 282.349 C 148.156 283.311,147.200 284.265,147.200 284.469 C 147.200 284.955,150.079 287.596,150.611 287.598 C 150.837 287.599,151.590 288.095,152.285 288.700 C 152.980 289.305,154.415 290.331,155.474 290.980 C 157.799 292.405,163.445 298.250,164.715 300.546 C 165.218 301.456,166.066 302.920,166.599 303.800 C 168.199 306.438,170.003 310.428,170.384 312.167 C 172.634 322.451,171.195 335.590,167.204 341.195 C 166.762 341.815,166.400 342.460,166.400 342.627 C 166.400 343.879,161.485 350.199,157.618 353.918 C 154.001 357.398,153.643 357.697,151.600 358.954 C 150.610 359.563,148.450 360.917,146.800 361.962 C 145.150 363.007,142.918 364.082,141.840 364.352 C 140.761 364.621,139.384 365.098,138.780 365.410 C 138.175 365.723,136.178 366.329,134.340 366.756 C 132.503 367.184,130.190 367.768,129.200 368.055 C 126.239 368.913,110.314 368.757,108.000 367.847 C 107.010 367.458,105.030 366.881,103.600 366.565 C 102.170 366.249,100.190 365.652,99.200 365.239 C 98.210 364.825,96.801 364.360,96.070 364.205 C 95.338 364.050,94.116 363.535,93.354 363.062 C 83.721 357.071,79.896 353.647,74.780 346.437 C 73.492 344.622,71.335 340.176,70.977 338.600 C 70.827 337.940,70.412 336.950,70.054 336.400 C 68.885 334.605,69.125 326.221,70.400 324.272 C 77.262 313.786,89.993 313.690,95.705 324.080 C 96.197 324.975,96.960 326.380,97.400 327.201 C 97.840 328.023,98.470 328.978,98.800 329.323 C 99.130 329.668,99.889 330.547,100.486 331.275 C 103.292 334.698,104.532 336.000,104.985 336.000 C 105.255 336.000,105.764 336.318,106.115 336.706 C 108.598 339.450,116.205 341.136,122.600 340.361 C 127.022 339.825,126.817 339.908,131.548 336.711 C 133.223 335.579,135.988 332.750,135.995 332.162 C 135.998 331.921,136.353 331.404,136.785 331.014 C 137.217 330.623,137.784 329.650,138.046 328.852 C 138.307 328.053,138.809 326.957,139.161 326.416 C 139.668 325.635,139.794 324.355,139.770 320.216 C 139.703 308.564,134.067 303.301,120.200 301.942 C 117.780 301.705,115.170 301.247,114.400 300.925 C 113.630 300.603,112.237 300.076,111.304 299.755 C 110.370 299.434,109.173 298.772,108.642 298.285 C 108.111 297.798,107.434 297.201,107.138 296.958 C 103.551 294.013,102.934 284.065,106.090 280.087 C 107.783 277.954,111.018 275.668,112.799 275.346 C 113.570 275.207,114.693 274.844,115.295 274.539 C 115.898 274.234,117.788 273.697,119.495 273.345 C 121.203 272.994,123.268 272.368,124.084 271.953 C 124.900 271.539,125.772 271.200,126.021 271.200 C 127.189 271.200,130.349 268.205,132.342 265.208 L 133.800 263.016 133.800 258.008 C 133.800 251.238,132.214 248.190,126.969 244.885 C 121.395 241.372,109.829 242.513,105.321 247.022 C 105.003 247.340,104.610 247.600,104.448 247.600 C 104.286 247.600,103.624 248.328,102.977 249.218 C 102.330 250.108,100.765 252.128,99.500 253.707 C 98.235 255.286,97.200 256.727,97.200 256.908 C 97.200 257.917,92.109 262.028,90.158 262.595 C 77.556 266.259,68.483 249.678,76.480 237.600 C 76.844 237.050,77.364 236.105,77.635 235.500 C 77.906 234.895,78.275 234.400,78.454 234.400 C 78.633 234.400,79.044 233.905,79.367 233.300 C 81.090 230.077,90.153 222.653,94.476 220.923 C 95.314 220.588,96.000 220.153,96.000 219.957 C 96.000 219.760,96.225 219.598,96.500 219.596 C 96.775 219.594,97.990 219.124,99.200 218.551 C 105.685 215.484,119.490 213.855,127.800 215.177 M302.122 216.364 C 305.556 217.772,305.781 217.931,309.242 221.400 C 315.791 227.965,315.733 227.544,315.990 270.086 C 316.234 310.452,315.573 306.032,321.429 306.461 C 324.087 306.655,325.576 306.960,326.324 307.465 C 326.916 307.863,327.958 308.462,328.639 308.795 C 336.095 312.438,336.034 326.970,328.546 330.802 C 327.916 331.125,326.934 331.719,326.364 332.123 C 325.606 332.659,324.289 332.918,321.473 333.086 C 315.875 333.420,316.245 332.553,315.985 345.941 C 315.845 353.171,315.607 357.346,315.299 358.000 C 315.040 358.550,314.646 359.720,314.424 360.600 C 312.444 368.453,294.423 369.604,289.360 362.200 C 287.461 359.424,287.115 357.128,286.847 345.514 C 286.627 335.991,286.522 334.750,285.886 334.114 C 285.219 333.447,283.383 333.387,257.886 333.200 L 230.600 333.000 229.044 331.900 C 228.188 331.295,227.271 330.800,227.006 330.800 C 224.655 330.800,221.428 324.869,221.455 320.600 C 221.477 317.217,223.942 311.045,226.408 308.200 C 226.789 307.760,227.317 306.728,227.580 305.906 C 227.843 305.084,228.206 304.320,228.386 304.209 C 228.566 304.098,229.470 302.520,230.394 300.703 C 231.319 298.887,232.308 297.130,232.592 296.800 C 232.876 296.470,233.464 295.480,233.899 294.600 C 235.726 290.903,238.530 285.785,238.838 285.586 C 239.020 285.468,239.541 284.568,239.997 283.586 C 240.452 282.604,241.001 281.530,241.217 281.200 C 241.432 280.870,241.883 279.970,242.219 279.200 C 242.555 278.430,243.363 276.990,244.014 276.000 C 244.665 275.010,246.028 272.580,247.043 270.600 C 248.059 268.620,249.493 266.010,250.231 264.800 C 250.969 263.590,251.871 261.970,252.235 261.200 C 252.599 260.430,253.060 259.530,253.258 259.200 C 253.457 258.870,253.985 257.880,254.431 257.000 C 254.877 256.120,255.762 254.590,256.398 253.600 C 257.034 252.610,258.474 250.000,259.599 247.800 C 260.724 245.600,262.258 242.810,263.009 241.600 C 263.759 240.390,265.206 237.780,266.225 235.800 C 272.807 223.003,275.999 218.971,281.461 216.556 C 286.626 214.272,296.792 214.178,302.122 216.364 M280.884 256.086 C 278.904 260.109,276.721 264.660,276.033 266.200 C 275.345 267.740,274.526 269.450,274.213 270.000 C 273.369 271.484,271.062 276.215,269.628 279.400 C 268.935 280.940,268.197 282.470,267.987 282.800 C 267.269 283.929,264.482 289.799,264.189 290.800 C 264.027 291.350,263.598 292.250,263.234 292.800 C 262.871 293.350,262.266 294.430,261.889 295.200 C 261.513 295.970,261.042 296.870,260.843 297.200 C 255.507 306.041,255.943 306.400,272.029 306.400 C 286.302 306.400,286.065 306.447,286.595 303.522 C 286.879 301.953,286.691 249.749,286.400 249.483 C 284.947 248.150,284.563 248.610,280.884 256.086 M285.153 278.726 C 285.184 294.682,285.060 303.115,284.786 303.626 C 284.267 304.595,261.944 304.849,260.694 303.900 C 259.929 303.319,260.666 300.646,262.321 298.000 C 262.803 297.230,263.198 296.320,263.199 295.978 C 263.199 295.635,263.641 294.758,264.179 294.028 C 264.718 293.299,265.269 292.196,265.405 291.578 C 265.540 290.961,265.909 290.242,266.223 289.981 C 266.537 289.720,266.990 288.781,267.229 287.893 C 267.468 287.006,267.914 286.029,268.221 285.722 C 268.528 285.415,269.004 284.412,269.280 283.492 C 269.555 282.572,270.096 281.504,270.480 281.120 C 270.865 280.735,271.302 279.933,271.452 279.337 C 271.601 278.741,272.146 277.631,272.662 276.871 C 273.178 276.111,273.600 275.220,273.600 274.891 C 273.600 274.563,273.938 273.733,274.351 273.047 C 274.765 272.361,275.319 271.125,275.583 270.300 C 275.846 269.475,276.213 268.800,276.398 268.800 C 276.583 268.800,277.049 267.945,277.435 266.900 C 277.820 265.855,278.370 264.721,278.657 264.380 C 278.944 264.039,279.431 263.046,279.739 262.173 C 280.047 261.300,280.682 259.871,281.150 258.999 C 281.617 258.126,282.000 257.255,282.000 257.064 C 282.000 256.872,282.450 256.181,283.000 255.527 C 283.550 254.873,284.000 254.022,284.000 253.636 C 284.000 252.405,284.591 252.286,284.853 253.464 C 284.992 254.089,285.127 265.457,285.153 278.726 M398.196 376.007 C 398.058 376.230,397.732 376.291,397.472 376.142 C 397.213 375.994,397.133 376.019,397.297 376.199 C 397.460 376.379,397.375 376.813,397.109 377.163 C 396.842 377.513,397.114 377.364,397.712 376.830 C 398.310 376.297,398.800 375.802,398.800 375.730 C 398.800 375.453,398.435 375.619,398.196 376.007 ' stroke='none' fill='%2382b3d7' fill-rule='evenodd'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\"\n\n//# sourceURL=webpack://sudoku-wasm-client/./src/logo.svg?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%272%27 fill=%27%23fff%27/%3e%3c/svg%3e":
/*!******************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%272%27 fill=%27%23fff%27/%3e%3c/svg%3e ***!
  \******************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%272%27 fill=%27%23fff%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%2527-4_-4_8_8%2527%253e%253ccircle_r=%25272%2527_fill=%2527%2523fff%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%2386b7fe%27/%3e%3c/svg%3e":
/*!*********************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%2386b7fe%27/%3e%3c/svg%3e ***!
  \*********************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%2386b7fe%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%2527-4_-4_8_8%2527%253e%253ccircle_r=%25273%2527_fill=%2527%252386b7fe%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e":
/*!******************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e ***!
  \******************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%2527-4_-4_8_8%2527%253e%253ccircle_r=%25273%2527_fill=%2527%2523fff%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%280, 0, 0, 0.25%29%27/%3e%3c/svg%3e":
/*!***********************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%280, 0, 0, 0.25%29%27/%3e%3c/svg%3e ***!
  \***********************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%280, 0, 0, 0.25%29%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%2527-4_-4_8_8%2527%253e%253ccircle_r=%25273%2527_fill=%2527rgba%25280,_0,_0,_0.25%2529%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%28255, 255, 255, 0.25%29%27/%3e%3c/svg%3e":
/*!*****************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%28255, 255, 255, 0.25%29%27/%3e%3c/svg%3e ***!
  \*****************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%28255, 255, 255, 0.25%29%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%2527-4_-4_8_8%2527%253e%253ccircle_r=%25273%2527_fill=%2527rgba%2528255,_255,_255,_0.25%2529%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 12 12%27 width=%2712%27 height=%2712%27 fill=%27none%27 stroke=%27%23dc3545%27%3e%3ccircle cx=%276%27 cy=%276%27 r=%274.5%27/%3e%3cpath stroke-linejoin=%27round%27 d=%27M5.8 3.6h.4L6 6.5z%27/%3e%3ccircle cx=%276%27 cy=%278.2%27 r=%27.6%27 fill=%27%23dc3545%27 stroke=%27none%27/%3e%3c/svg%3e":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 12 12%27 width=%2712%27 height=%2712%27 fill=%27none%27 stroke=%27%23dc3545%27%3e%3ccircle cx=%276%27 cy=%276%27 r=%274.5%27/%3e%3cpath stroke-linejoin=%27round%27 d=%27M5.8 3.6h.4L6 6.5z%27/%3e%3ccircle cx=%276%27 cy=%278.2%27 r=%27.6%27 fill=%27%23dc3545%27 stroke=%27none%27/%3e%3c/svg%3e ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 12 12%27 width=%2712%27 height=%2712%27 fill=%27none%27 stroke=%27%23dc3545%27%3e%3ccircle cx=%276%27 cy=%276%27 r=%274.5%27/%3e%3cpath stroke-linejoin=%27round%27 d=%27M5.8 3.6h.4L6 6.5z%27/%3e%3ccircle cx=%276%27 cy=%278.2%27 r=%27.6%27 fill=%27%23dc3545%27 stroke=%27none%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_12_12%2527_width=%252712%2527_height=%252712%2527_fill=%2527none%2527_stroke=%2527%2523dc3545%2527%253e%253ccircle_cx=%25276%2527_cy=%25276%2527_r=%25274.5%2527/%253e%253cpath_stroke-linejoin=%2527round%2527_d=%2527M5.8_3.6h.4L6_6.5z%2527/%253e%253ccircle_cx=%25276%2527_cy=%25278.2%2527_r=%2527.6%2527_fill=%2527%2523dc3545%2527_stroke=%2527none%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23000%27%3e%3cpath d=%27M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z%27/%3e%3c/svg%3e":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23000%27%3e%3cpath d=%27M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z%27/%3e%3c/svg%3e ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23000%27%3e%3cpath d=%27M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_16_16%2527_fill=%2527%2523000%2527%253e%253cpath_d=%2527M.293.293a1_1_0_0_1_1.414_0L8_6.586_14.293.293a1_1_0_1_1_1.414_1.414L9.414_8l6.293_6.293a1_1_0_0_1-1.414_1.414L8_9.414l-6.293_6.293a1_1_0_0_1-1.414-1.414L6.586_8_.293_1.707a1_1_0_0_1_0-1.414z%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%236ea8fe%27%3e%3cpath fill-rule=%27evenodd%27 d=%27M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%236ea8fe%27%3e%3cpath fill-rule=%27evenodd%27 d=%27M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%236ea8fe%27%3e%3cpath fill-rule=%27evenodd%27 d=%27M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_16_16%2527_fill=%2527%25236ea8fe%2527%253e%253cpath_fill-rule=%2527evenodd%2527_d=%2527M1.646_4.646a.5.5_0_0_1_.708_0L8_10.293l5.646-5.647a.5.5_0_0_1_.708.708l-6_6a.5.5_0_0_1-.708_0l-6-6a.5.5_0_0_1_0-.708z%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z%27/%3e%3c/svg%3e":
/*!************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z%27/%3e%3c/svg%3e ***!
  \************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_16_16%2527_fill=%2527%2523fff%2527%253e%253cpath_d=%2527M11.354_1.646a.5.5_0_0_1_0_.708L5.707_8l5.647_5.646a.5.5_0_0_1-.708.708l-6-6a.5.5_0_0_1_0-.708l6-6a.5.5_0_0_1_.708_0z%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e":
/*!*************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e ***!
  \*************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_16_16%2527_fill=%2527%2523fff%2527%253e%253cpath_d=%2527M4.646_1.646a.5.5_0_0_1_.708_0l6_6a.5.5_0_0_1_0_.708l-6_6a.5.5_0_0_1-.708-.708L10.293_8_4.646_2.354a.5.5_0_0_1_0-.708z%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27none%27 stroke=%27%23052c65%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3e%3cpath d=%27M2 5L8 11L14 5%27/%3e%3c/svg%3e":
/*!*********************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27none%27 stroke=%27%23052c65%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3e%3cpath d=%27M2 5L8 11L14 5%27/%3e%3c/svg%3e ***!
  \*********************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27none%27 stroke=%27%23052c65%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3e%3cpath d=%27M2 5L8 11L14 5%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_16_16%2527_fill=%2527none%2527_stroke=%2527%2523052c65%2527_stroke-linecap=%2527round%2527_stroke-linejoin=%2527round%2527%253e%253cpath_d=%2527M2_5L8_11L14_5%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27none%27 stroke=%27%23212529%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3e%3cpath d=%27M2 5L8 11L14 5%27/%3e%3c/svg%3e":
/*!*********************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27none%27 stroke=%27%23212529%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3e%3cpath d=%27M2 5L8 11L14 5%27/%3e%3c/svg%3e ***!
  \*********************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27none%27 stroke=%27%23212529%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3e%3cpath d=%27M2 5L8 11L14 5%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_16_16%2527_fill=%2527none%2527_stroke=%2527%2523212529%2527_stroke-linecap=%2527round%2527_stroke-linejoin=%2527round%2527%253e%253cpath_d=%2527M2_5L8_11L14_5%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23343a40%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27m2 5 6 6 6-6%27/%3e%3c/svg%3e":
/*!****************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23343a40%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27m2 5 6 6 6-6%27/%3e%3c/svg%3e ***!
  \****************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23343a40%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27m2 5 6 6 6-6%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_16_16%2527%253e%253cpath_fill=%2527none%2527_stroke=%2527%2523343a40%2527_stroke-linecap=%2527round%2527_stroke-linejoin=%2527round%2527_stroke-width=%25272%2527_d=%2527m2_5_6_6_6-6%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23dee2e6%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27m2 5 6 6 6-6%27/%3e%3c/svg%3e":
/*!****************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23dee2e6%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27m2 5 6 6 6-6%27/%3e%3c/svg%3e ***!
  \****************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23dee2e6%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27m2 5 6 6 6-6%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_16_16%2527%253e%253cpath_fill=%2527none%2527_stroke=%2527%2523dee2e6%2527_stroke-linecap=%2527round%2527_stroke-linejoin=%2527round%2527_stroke-width=%25272%2527_d=%2527m2_5_6_6_6-6%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27M6 10h8%27/%3e%3c/svg%3e":
/*!********************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27M6 10h8%27/%3e%3c/svg%3e ***!
  \********************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27M6 10h8%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_20_20%2527%253e%253cpath_fill=%2527none%2527_stroke=%2527%2523fff%2527_stroke-linecap=%2527round%2527_stroke-linejoin=%2527round%2527_stroke-width=%25273%2527_d=%2527M6_10h8%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27m6 10 3 3 6-6%27/%3e%3c/svg%3e":
/*!**************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27m6 10 3 3 6-6%27/%3e%3c/svg%3e ***!
  \**************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27m6 10 3 3 6-6%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_20_20%2527%253e%253cpath_fill=%2527none%2527_stroke=%2527%2523fff%2527_stroke-linecap=%2527round%2527_stroke-linejoin=%2527round%2527_stroke-width=%25273%2527_d=%2527m6_10_3_3_6-6%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%28255, 255, 255, 0.55%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e":
/*!******************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%28255, 255, 255, 0.55%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e ***!
  \******************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%28255, 255, 255, 0.55%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_30_30%2527%253e%253cpath_stroke=%2527rgba%2528255,_255,_255,_0.55%2529%2527_stroke-linecap=%2527round%2527_stroke-miterlimit=%252710%2527_stroke-width=%25272%2527_d=%2527M4_7h22M4_15h22M4_23h22%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%2833, 37, 41, 0.75%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e":
/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%2833, 37, 41, 0.75%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%2833, 37, 41, 0.75%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_30_30%2527%253e%253cpath_stroke=%2527rgba%252833,_37,_41,_0.75%2529%2527_stroke-linecap=%2527round%2527_stroke-miterlimit=%252710%2527_stroke-width=%25272%2527_d=%2527M4_7h22M4_15h22M4_23h22%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%23198754%27 d=%27M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z%27/%3e%3c/svg%3e":
/*!**********************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%23198754%27 d=%27M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z%27/%3e%3c/svg%3e ***!
  \**********************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%23198754%27 d=%27M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z%27/%3e%3c/svg%3e\";\n\n//# sourceURL=webpack://sudoku-wasm-client/data:image/svg+xml,%253csvg_xmlns=%2527http://www.w3.org/2000/svg%2527_viewBox=%25270_0_8_8%2527%253e%253cpath_fill=%2527%2523198754%2527_d=%2527M2.3_6.73.6_4.53c-.4-1.04.46-1.4_1.1-.8l1.1_1.4_3.4-3.8c.6-.63_1.6-.27_1.2.7l-4_4.6c-.43.5-.8.4-1.1.1z%2527/%253e%253c/svg%253e?");

/***/ }),

/***/ "../pkg/sudoku_solver.js":
/*!*******************************!*\
  !*** ../pkg/sudoku_solver.js ***!
  \*******************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __wbg_set_wasm: () => (/* reexport safe */ _sudoku_solver_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_wasm),\n/* harmony export */   __wbindgen_init_externref_table: () => (/* reexport safe */ _sudoku_solver_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_init_externref_table),\n/* harmony export */   __wbindgen_throw: () => (/* reexport safe */ _sudoku_solver_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_throw),\n/* harmony export */   wasm_get_sample_sudoku_string: () => (/* reexport safe */ _sudoku_solver_bg_js__WEBPACK_IMPORTED_MODULE_0__.wasm_get_sample_sudoku_string),\n/* harmony export */   wasm_solve_sudoku: () => (/* reexport safe */ _sudoku_solver_bg_js__WEBPACK_IMPORTED_MODULE_0__.wasm_solve_sudoku),\n/* harmony export */   wasm_sudoku_contains_conflicts: () => (/* reexport safe */ _sudoku_solver_bg_js__WEBPACK_IMPORTED_MODULE_0__.wasm_sudoku_contains_conflicts)\n/* harmony export */ });\n/* harmony import */ var _sudoku_solver_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sudoku_solver_bg.wasm */ \"../pkg/sudoku_solver_bg.wasm\");\n/* harmony import */ var _sudoku_solver_bg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sudoku_solver_bg.js */ \"../pkg/sudoku_solver_bg.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_sudoku_solver_bg_wasm__WEBPACK_IMPORTED_MODULE_1__]);\n_sudoku_solver_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n(0,_sudoku_solver_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_wasm)(_sudoku_solver_bg_wasm__WEBPACK_IMPORTED_MODULE_1__);\n_sudoku_solver_bg_wasm__WEBPACK_IMPORTED_MODULE_1__.__wbindgen_start();\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://sudoku-wasm-client/../pkg/sudoku_solver.js?");

/***/ }),

/***/ "../pkg/sudoku_solver_bg.js":
/*!**********************************!*\
  !*** ../pkg/sudoku_solver_bg.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __wbg_set_wasm: () => (/* binding */ __wbg_set_wasm),\n/* harmony export */   __wbindgen_init_externref_table: () => (/* binding */ __wbindgen_init_externref_table),\n/* harmony export */   __wbindgen_throw: () => (/* binding */ __wbindgen_throw),\n/* harmony export */   wasm_get_sample_sudoku_string: () => (/* binding */ wasm_get_sample_sudoku_string),\n/* harmony export */   wasm_solve_sudoku: () => (/* binding */ wasm_solve_sudoku),\n/* harmony export */   wasm_sudoku_contains_conflicts: () => (/* binding */ wasm_sudoku_contains_conflicts)\n/* harmony export */ });\nlet wasm;\nfunction __wbg_set_wasm(val) {\n  wasm = val;\n}\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nlet cachedTextDecoder = new lTextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nlet cachedUint8ArrayMemory0 = null;\nfunction getUint8ArrayMemory0() {\n  if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n    cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8ArrayMemory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\nlet WASM_VECTOR_LEN = 0;\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nlet cachedTextEncoder = new lTextEncoder('utf-8');\nconst encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length, 1) >>> 0;\n    getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n  let len = arg.length;\n  let ptr = malloc(len, 1) >>> 0;\n  const mem = getUint8ArrayMemory0();\n  let offset = 0;\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n    const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n    ptr = realloc(ptr, len, offset, 1) >>> 0;\n  }\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n/**\n * @param {string} input_str\n * @returns {string}\n */\nfunction wasm_solve_sudoku(input_str) {\n  let deferred2_0;\n  let deferred2_1;\n  try {\n    const ptr0 = passStringToWasm0(input_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.wasm_solve_sudoku(ptr0, len0);\n    deferred2_0 = ret[0];\n    deferred2_1 = ret[1];\n    return getStringFromWasm0(ret[0], ret[1]);\n  } finally {\n    wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n  }\n}\n\n/**\n * @param {string} input_str\n * @returns {boolean}\n */\nfunction wasm_sudoku_contains_conflicts(input_str) {\n  const ptr0 = passStringToWasm0(input_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  const len0 = WASM_VECTOR_LEN;\n  const ret = wasm.wasm_sudoku_contains_conflicts(ptr0, len0);\n  return ret !== 0;\n}\n\n/**\n * @param {number} random_number\n * @returns {string}\n */\nfunction wasm_get_sample_sudoku_string(random_number) {\n  let deferred1_0;\n  let deferred1_1;\n  try {\n    const ret = wasm.wasm_get_sample_sudoku_string(random_number);\n    deferred1_0 = ret[0];\n    deferred1_1 = ret[1];\n    return getStringFromWasm0(ret[0], ret[1]);\n  } finally {\n    wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n  }\n}\nfunction __wbindgen_init_externref_table() {\n  const table = wasm.__wbindgen_export_0;\n  const offset = table.grow(4);\n  table.set(0, undefined);\n  table.set(offset + 0, undefined);\n  table.set(offset + 1, null);\n  table.set(offset + 2, true);\n  table.set(offset + 3, false);\n  ;\n}\n;\nfunction __wbindgen_throw(arg0, arg1) {\n  throw new Error(getStringFromWasm0(arg0, arg1));\n}\n;\n\n//# sourceURL=webpack://sudoku-wasm-client/../pkg/sudoku_solver_bg.js?");

/***/ }),

/***/ "../pkg/sudoku_solver_bg.wasm":
/*!************************************!*\
  !*** ../pkg/sudoku_solver_bg.wasm ***!
  \************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("/* harmony import */ var WEBPACK_IMPORTED_MODULE_0 = __webpack_require__(/*! ./sudoku_solver_bg.js */ \"../pkg/sudoku_solver_bg.js\");\nmodule.exports = __webpack_require__.v(exports, module.id, \"f5e17f4fbebaea138416\", {\n\t\"./sudoku_solver_bg.js\": {\n\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw,\n\t\t\"__wbindgen_init_externref_table\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_init_externref_table\n\t}\n});\n\n//# sourceURL=webpack://sudoku-wasm-client/../pkg/sudoku_solver_bg.wasm?");

/***/ })

}]);